[{"/Users/msolomon/Projects/MyPawthereum/src/index.tsx":"1","/Users/msolomon/Projects/MyPawthereum/src/serviceWorkerRegistration.ts":"2","/Users/msolomon/Projects/MyPawthereum/src/i18n.ts":"3","/Users/msolomon/Projects/MyPawthereum/src/utils/getLibrary.ts":"4","/Users/msolomon/Projects/MyPawthereum/src/state/application/updater.ts":"5","/Users/msolomon/Projects/MyPawthereum/src/state/lists/updater.ts":"6","/Users/msolomon/Projects/MyPawthereum/src/state/transactions/updater.tsx":"7","/Users/msolomon/Projects/MyPawthereum/src/state/multicall/updater.tsx":"8","/Users/msolomon/Projects/MyPawthereum/src/pages/App.tsx":"9","/Users/msolomon/Projects/MyPawthereum/src/state/user/updater.tsx":"10","/Users/msolomon/Projects/MyPawthereum/src/state/index.ts":"11","/Users/msolomon/Projects/MyPawthereum/src/constants/index.ts":"12","/Users/msolomon/Projects/MyPawthereum/src/state/application/actions.ts":"13","/Users/msolomon/Projects/MyPawthereum/src/state/lists/actions.ts":"14","/Users/msolomon/Projects/MyPawthereum/src/state/lists/hooks.ts":"15","/Users/msolomon/Projects/MyPawthereum/src/hooks/useDebounce.ts":"16","/Users/msolomon/Projects/MyPawthereum/src/hooks/useFetchListCallback.ts":"17","/Users/msolomon/Projects/MyPawthereum/src/hooks/useInterval.ts":"18","/Users/msolomon/Projects/MyPawthereum/src/hooks/useIsWindowVisible.ts":"19","/Users/msolomon/Projects/MyPawthereum/src/theme/index.tsx":"20","/Users/msolomon/Projects/MyPawthereum/src/state/application/hooks.ts":"21","/Users/msolomon/Projects/MyPawthereum/src/utils/retry.ts":"22","/Users/msolomon/Projects/MyPawthereum/src/state/transactions/actions.ts":"23","/Users/msolomon/Projects/MyPawthereum/src/state/multicall/actions.ts":"24","/Users/msolomon/Projects/MyPawthereum/src/utils/chunkArray.ts":"25","/Users/msolomon/Projects/MyPawthereum/src/hooks/useContract.ts":"26","/Users/msolomon/Projects/MyPawthereum/src/state/user/actions.ts":"27","/Users/msolomon/Projects/MyPawthereum/src/components/Blocklist/index.tsx":"28","/Users/msolomon/Projects/MyPawthereum/src/theme/DarkModeQueryParamReader.tsx":"29","/Users/msolomon/Projects/MyPawthereum/src/components/Header/Polling.tsx":"30","/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/v2.tsx":"31","/Users/msolomon/Projects/MyPawthereum/src/pages/MigrateV2/MigrateV2Pair.tsx":"32","/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/PositionPage.tsx":"33","/Users/msolomon/Projects/MyPawthereum/src/pages/RemoveLiquidity/V3.tsx":"34","/Users/msolomon/Projects/MyPawthereum/src/pages/Earn/Manage.tsx":"35","/Users/msolomon/Projects/MyPawthereum/src/pages/Swap/redirects.tsx":"36","/Users/msolomon/Projects/MyPawthereum/src/pages/Vote/VotePage.tsx":"37","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/redirects.tsx":"38","/Users/msolomon/Projects/MyPawthereum/src/components/analytics/GoogleAnalyticsReporter.tsx":"39","/Users/msolomon/Projects/MyPawthereum/src/components/claim/AddressClaimModal.tsx":"40","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/redirects.tsx":"41","/Users/msolomon/Projects/MyPawthereum/src/state/application/reducer.ts":"42","/Users/msolomon/Projects/MyPawthereum/src/state/multicall/reducer.ts":"43","/Users/msolomon/Projects/MyPawthereum/src/state/global/actions.ts":"44","/Users/msolomon/Projects/MyPawthereum/src/hooks/index.ts":"45","/Users/msolomon/Projects/MyPawthereum/src/hooks/Tokens.ts":"46","/Users/msolomon/Projects/MyPawthereum/src/constants/lists.ts":"47","/Users/msolomon/Projects/MyPawthereum/src/state/burn/v3/reducer.ts":"48","/Users/msolomon/Projects/MyPawthereum/src/utils/resolveENSContentHash.ts":"49","/Users/msolomon/Projects/MyPawthereum/src/theme/components.tsx":"50","/Users/msolomon/Projects/MyPawthereum/src/state/user/hooks.tsx":"51","/Users/msolomon/Projects/MyPawthereum/src/components/Header/index.tsx":"52","/Users/msolomon/Projects/MyPawthereum/src/pages/Earn/index.tsx":"53","/Users/msolomon/Projects/MyPawthereum/src/pages/MigrateV2/index.tsx":"54","/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/index.tsx":"55","/Users/msolomon/Projects/MyPawthereum/src/pages/RemoveLiquidity/index.tsx":"56","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/index.tsx":"57","/Users/msolomon/Projects/MyPawthereum/src/pages/Swap/index.tsx":"58","/Users/msolomon/Projects/MyPawthereum/src/pages/Vote/index.tsx":"59","/Users/msolomon/Projects/MyPawthereum/src/components/Popups/index.tsx":"60","/Users/msolomon/Projects/MyPawthereum/src/components/Web3ReactManager/index.tsx":"61","/Users/msolomon/Projects/MyPawthereum/src/pages/PoolFinder/index.tsx":"62","/Users/msolomon/Projects/MyPawthereum/src/pages/Feedback/index.tsx":"63","/Users/msolomon/Projects/MyPawthereum/src/pages/Stats/index.tsx":"64","/Users/msolomon/Projects/MyPawthereum/src/hooks/useENS.ts":"65","/Users/msolomon/Projects/MyPawthereum/src/state/transactions/hooks.tsx":"66","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/index.tsx":"67","/Users/msolomon/Projects/MyPawthereum/src/state/claim/hooks.ts":"68","/Users/msolomon/Projects/MyPawthereum/src/components/earn/styled.ts":"69","/Users/msolomon/Projects/MyPawthereum/src/constants/catDayVisitors/index.ts":"70","/Users/msolomon/Projects/MyPawthereum/src/state/burn/v3/actions.ts":"71","/Users/msolomon/Projects/MyPawthereum/src/utils/listSort.ts":"72","/Users/msolomon/Projects/MyPawthereum/src/state/multicall/hooks.ts":"73","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/filtering.ts":"74","/Users/msolomon/Projects/MyPawthereum/src/utils/index.ts":"75","/Users/msolomon/Projects/MyPawthereum/src/hooks/useENSAddress.ts":"76","/Users/msolomon/Projects/MyPawthereum/src/hooks/useENSName.ts":"77","/Users/msolomon/Projects/MyPawthereum/src/components/Header/UniBalanceContent.tsx":"78","/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/CTACards.tsx":"79","/Users/msolomon/Projects/MyPawthereum/src/components/Confetti/index.tsx":"80","/Users/msolomon/Projects/MyPawthereum/src/components/AddressInputPanel/index.tsx":"81","/Users/msolomon/Projects/MyPawthereum/src/utils/currencyId.ts":"82","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/PoolPriceBar.tsx":"83","/Users/msolomon/Projects/MyPawthereum/src/components/Row/index.tsx":"84","/Users/msolomon/Projects/MyPawthereum/src/components/Modal/index.tsx":"85","/Users/msolomon/Projects/MyPawthereum/src/components/Column/index.tsx":"86","/Users/msolomon/Projects/MyPawthereum/src/components/Button/index.tsx":"87","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/ConfirmAddModalBottom.tsx":"88","/Users/msolomon/Projects/MyPawthereum/src/connectors/index.ts":"89","/Users/msolomon/Projects/MyPawthereum/src/constants/v3/index.ts":"90","/Users/msolomon/Projects/MyPawthereum/src/utils/isZero.ts":"91","/Users/msolomon/Projects/MyPawthereum/src/hooks/useUSDCPrice.ts":"92","/Users/msolomon/Projects/MyPawthereum/src/utils/computeUniCirculation.ts":"93","/Users/msolomon/Projects/MyPawthereum/src/components/Card/index.tsx":"94","/Users/msolomon/Projects/MyPawthereum/src/components/FormattedCurrencyAmount/index.tsx":"95","/Users/msolomon/Projects/MyPawthereum/src/state/wallet/hooks.ts":"96","/Users/msolomon/Projects/MyPawthereum/src/hooks/useWindowSize.ts":"97","/Users/msolomon/Projects/MyPawthereum/src/hooks/useCurrentBlockTimestamp.ts":"98","/Users/msolomon/Projects/MyPawthereum/src/hooks/useTotalSupply.ts":"99","/Users/msolomon/Projects/MyPawthereum/src/state/stake/hooks.ts":"100","/Users/msolomon/Projects/MyPawthereum/src/state/mint/actions.ts":"101","/Users/msolomon/Projects/MyPawthereum/src/components/swap/UnsupportedCurrencyFooter.tsx":"102","/Users/msolomon/Projects/MyPawthereum/src/connectors/NetworkConnector.ts":"103","/Users/msolomon/Projects/MyPawthereum/src/connectors/Fortmatic.ts":"104","/Users/msolomon/Projects/MyPawthereum/src/utils/wrappedCurrency.ts":"105","/Users/msolomon/Projects/MyPawthereum/src/hooks/useV2Pairs.ts":"106","/Users/msolomon/Projects/MyPawthereum/src/components/NavigationTabs/index.tsx":"107","/Users/msolomon/Projects/MyPawthereum/src/hooks/useTheme.ts":"108","/Users/msolomon/Projects/MyPawthereum/src/state/swap/hooks.ts":"109","/Users/msolomon/Projects/MyPawthereum/src/abis/staking-rewards.ts":"110","/Users/msolomon/Projects/MyPawthereum/src/components/CurrencyLogo/index.tsx":"111","/Users/msolomon/Projects/MyPawthereum/src/state/swap/actions.ts":"112","/Users/msolomon/Projects/MyPawthereum/src/hooks/useParsedQueryString.ts":"113","/Users/msolomon/Projects/MyPawthereum/src/hooks/useV2Trade.ts":"114","/Users/msolomon/Projects/MyPawthereum/src/hooks/useHttpLocations.ts":"115","/Users/msolomon/Projects/MyPawthereum/src/hooks/useBestV3Trade.ts":"116","/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/actions.ts":"117","/Users/msolomon/Projects/MyPawthereum/src/components/Settings/index.tsx":"118","/Users/msolomon/Projects/MyPawthereum/src/hooks/useAllCurrencyCombinations.ts":"119","/Users/msolomon/Projects/MyPawthereum/src/hooks/useENSContentHash.ts":"120","/Users/msolomon/Projects/MyPawthereum/src/utils/uriToHttp.ts":"121","/Users/msolomon/Projects/MyPawthereum/src/utils/parseENSAddress.ts":"122","/Users/msolomon/Projects/MyPawthereum/src/utils/contenthashToUri.ts":"123","/Users/msolomon/Projects/MyPawthereum/src/hooks/useAllV3Routes.ts":"124","/Users/msolomon/Projects/MyPawthereum/src/components/Logo/index.tsx":"125","/Users/msolomon/Projects/MyPawthereum/src/utils/isTradeBetter.ts":"126","/Users/msolomon/Projects/MyPawthereum/src/hooks/useOnClickOutside.tsx":"127","/Users/msolomon/Projects/MyPawthereum/src/hooks/useV3SwapPools.ts":"128","/Users/msolomon/Projects/MyPawthereum/src/components/TransactionSettings/index.tsx":"129","/Users/msolomon/Projects/MyPawthereum/src/components/Toggle/index.tsx":"130","/Users/msolomon/Projects/MyPawthereum/src/components/QuestionHelper/index.tsx":"131","/Users/msolomon/Projects/MyPawthereum/src/hooks/usePools.ts":"132","/Users/msolomon/Projects/MyPawthereum/src/utils/maxAmountSpend.ts":"133","/Users/msolomon/Projects/MyPawthereum/src/hooks/useTransactionDeadline.ts":"134","/Users/msolomon/Projects/MyPawthereum/src/state/mint/hooks.ts":"135","/Users/msolomon/Projects/MyPawthereum/src/hooks/useIsSwapUnsupported.ts":"136","/Users/msolomon/Projects/MyPawthereum/src/hooks/useApproveCallback.ts":"137","/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/styleds.tsx":"138","/Users/msolomon/Projects/MyPawthereum/src/pages/AppBody.tsx":"139","/Users/msolomon/Projects/MyPawthereum/src/utils/prices.ts":"140","/Users/msolomon/Projects/MyPawthereum/src/utils/getTradeVersion.ts":"141","/Users/msolomon/Projects/MyPawthereum/src/state/governance/hooks.ts":"142","/Users/msolomon/Projects/MyPawthereum/src/hooks/useWrapCallback.ts":"143","/Users/msolomon/Projects/MyPawthereum/src/hooks/useSwapCallback.ts":"144","/Users/msolomon/Projects/MyPawthereum/src/hooks/useToggledVersion.ts":"145","/Users/msolomon/Projects/MyPawthereum/src/hooks/useERC20Permit.ts":"146","/Users/msolomon/Projects/MyPawthereum/src/components/swap/confirmPriceImpactWithoutFee.ts":"147","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CurrencySearchModal.tsx":"148","/Users/msolomon/Projects/MyPawthereum/src/components/Popups/ClaimPopup.tsx":"149","/Users/msolomon/Projects/MyPawthereum/src/components/Popups/PopupItem.tsx":"150","/Users/msolomon/Projects/MyPawthereum/src/pages/Vote/styled.tsx":"151","/Users/msolomon/Projects/MyPawthereum/src/utils/computePriceImpactWithMaximumSlippage.tsx":"152","/Users/msolomon/Projects/MyPawthereum/src/utils/computeFiatValuePriceImpact.tsx":"153","/Users/msolomon/Projects/MyPawthereum/src/components/vote/DelegateModal.tsx":"154","/Users/msolomon/Projects/MyPawthereum/src/hooks/useTokenAllowance.ts":"155","/Users/msolomon/Projects/MyPawthereum/src/components/swap/TradePrice.tsx":"156","/Users/msolomon/Projects/MyPawthereum/src/state/burn/actions.ts":"157","/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapHeader.tsx":"158","/Users/msolomon/Projects/MyPawthereum/src/components/swap/CompleteSwapModal.tsx":"159","/Users/msolomon/Projects/MyPawthereum/src/components/swap/styleds.tsx":"160","/Users/msolomon/Projects/MyPawthereum/src/components/swap/ConfirmSwapModal.tsx":"161","/Users/msolomon/Projects/MyPawthereum/src/state/burn/hooks.ts":"162","/Users/msolomon/Projects/MyPawthereum/src/components/swap/BetterTradeLink.tsx":"163","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/styled.tsx":"164","/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/Review.tsx":"165","/Users/msolomon/Projects/MyPawthereum/src/hooks/useDebouncedChangeHandler.tsx":"166","/Users/msolomon/Projects/MyPawthereum/src/components/PositionCard/index.tsx":"167","/Users/msolomon/Projects/MyPawthereum/src/components/TransactionConfirmationModal/index.tsx":"168","/Users/msolomon/Projects/MyPawthereum/src/components/DoubleLogo/index.tsx":"169","/Users/msolomon/Projects/MyPawthereum/src/components/CurrencyInputPanel/index.tsx":"170","/Users/msolomon/Projects/MyPawthereum/src/components/Tooltip/index.tsx":"171","/Users/msolomon/Projects/MyPawthereum/src/components/earn/PoolCard.tsx":"172","/Users/msolomon/Projects/MyPawthereum/src/pages/Earn/Countdown.tsx":"173","/Users/msolomon/Projects/MyPawthereum/src/components/claim/ClaimModal.tsx":"174","/Users/msolomon/Projects/MyPawthereum/src/hooks/useIsArgentWallet.ts":"175","/Users/msolomon/Projects/MyPawthereum/src/hooks/useDerivedPositionInfo.ts":"176","/Users/msolomon/Projects/MyPawthereum/src/hooks/useV3Positions.ts":"177","/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/hooks.ts":"178","/Users/msolomon/Projects/MyPawthereum/src/hooks/useLast.ts":"179","/Users/msolomon/Projects/MyPawthereum/src/components/Loader/index.tsx":"180","/Users/msolomon/Projects/MyPawthereum/src/components/TokenWarningModal/index.tsx":"181","/Users/msolomon/Projects/MyPawthereum/src/components/Rank/index.tsx":"182","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ImportList.tsx":"183","/Users/msolomon/Projects/MyPawthereum/src/components/swap/AdvancedSwapDetails.tsx":"184","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/Manage.tsx":"185","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CurrencySearch.tsx":"186","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ImportToken.tsx":"187","/Users/msolomon/Projects/MyPawthereum/src/components/Popups/TransactionPopup.tsx":"188","/Users/msolomon/Projects/MyPawthereum/src/components/Popups/ListUpdatePopup.tsx":"189","/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapModalHeader.tsx":"190","/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapModalFooter.tsx":"191","/Users/msolomon/Projects/MyPawthereum/src/components/Slider/index.tsx":"192","/Users/msolomon/Projects/MyPawthereum/src/hooks/useColor.ts":"193","/Users/msolomon/Projects/MyPawthereum/src/components/CurrencyInputPanel/FiatValue.tsx":"194","/Users/msolomon/Projects/MyPawthereum/src/components/PositionCard/Sushi.tsx":"195","/Users/msolomon/Projects/MyPawthereum/src/components/PositionCard/V2.tsx":"196","/Users/msolomon/Projects/MyPawthereum/src/hooks/usePrevious.ts":"197","/Users/msolomon/Projects/MyPawthereum/src/components/Web3Status/index.tsx":"198","/Users/msolomon/Projects/MyPawthereum/src/components/Menu/index.tsx":"199","/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/utils.ts":"200","/Users/msolomon/Projects/MyPawthereum/src/pages/RemoveLiquidity/styled.ts":"201","/Users/msolomon/Projects/MyPawthereum/src/components/earn/ClaimRewardModal.tsx":"202","/Users/msolomon/Projects/MyPawthereum/src/components/earn/StakingModal.tsx":"203","/Users/msolomon/Projects/MyPawthereum/src/components/earn/UnstakingModal.tsx":"204","/Users/msolomon/Projects/MyPawthereum/src/components/RangeSelector/index.tsx":"205","/Users/msolomon/Projects/MyPawthereum/src/components/PositionPreview/index.tsx":"206","/Users/msolomon/Projects/MyPawthereum/src/components/FeeSelector/index.tsx":"207","/Users/msolomon/Projects/MyPawthereum/src/components/RateToggle/index.tsx":"208","/Users/msolomon/Projects/MyPawthereum/src/utils/listVersionLabel.ts":"209","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/sorting.ts":"210","/Users/msolomon/Projects/MyPawthereum/src/components/ModalViews/index.tsx":"211","/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapRoute.tsx":"212","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ManageTokens.tsx":"213","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ManageLists.tsx":"214","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/styleds.tsx":"215","/Users/msolomon/Projects/MyPawthereum/src/components/TransactionCompleteModal/index.tsx":"216","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ImportRow.tsx":"217","/Users/msolomon/Projects/MyPawthereum/src/hooks/useAddTokenToMetamask.ts":"218","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CurrencyList.tsx":"219","/Users/msolomon/Projects/MyPawthereum/src/components/PositionList/index.tsx":"220","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CommonBases.tsx":"221","/Users/msolomon/Projects/MyPawthereum/src/components/swap/FormattedPriceImpact.tsx":"222","/Users/msolomon/Projects/MyPawthereum/src/components/NumericalInput/index.tsx":"223","/Users/msolomon/Projects/MyPawthereum/src/components/Popover/index.tsx":"224","/Users/msolomon/Projects/MyPawthereum/src/hooks/useSocksBalance.ts":"225","/Users/msolomon/Projects/MyPawthereum/src/components/Badge/RangeBadge.tsx":"226","/Users/msolomon/Projects/MyPawthereum/src/utils/getTickToPrice.ts":"227","/Users/msolomon/Projects/MyPawthereum/src/hooks/usePositionTokenURI.ts":"228","/Users/msolomon/Projects/MyPawthereum/src/hooks/useToggle.ts":"229","/Users/msolomon/Projects/MyPawthereum/src/components/Toggle/ListToggle.tsx":"230","/Users/msolomon/Projects/MyPawthereum/src/utils/getTokenList.ts":"231","/Users/msolomon/Projects/MyPawthereum/src/state/burn/v3/hooks.ts":"232","/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/reducer.ts":"233","/Users/msolomon/Projects/MyPawthereum/src/state/burn/reducer.ts":"234","/Users/msolomon/Projects/MyPawthereum/src/state/lists/reducer.ts":"235","/Users/msolomon/Projects/MyPawthereum/src/state/mint/reducer.ts":"236","/Users/msolomon/Projects/MyPawthereum/src/state/swap/reducer.ts":"237","/Users/msolomon/Projects/MyPawthereum/src/state/transactions/reducer.ts":"238","/Users/msolomon/Projects/MyPawthereum/src/state/user/reducer.ts":"239","/Users/msolomon/Projects/MyPawthereum/src/hooks/useV3PositionFees.ts":"240","/Users/msolomon/Projects/MyPawthereum/src/components/WalletModal/index.tsx":"241","/Users/msolomon/Projects/MyPawthereum/src/components/Identicon/index.tsx":"242","/Users/msolomon/Projects/MyPawthereum/src/utils/formatTokenAmount.ts":"243","/Users/msolomon/Projects/MyPawthereum/src/components/PositionListItem/index.tsx":"244","/Users/msolomon/Projects/MyPawthereum/src/components/ProgressSteps/index.tsx":"245","/Users/msolomon/Projects/MyPawthereum/src/components/ListLogo/index.tsx":"246","/Users/msolomon/Projects/MyPawthereum/src/components/Toggle/MultiToggle.tsx":"247","/Users/msolomon/Projects/MyPawthereum/src/components/InputStepCounter/InputStepCounter.tsx":"248","/Users/msolomon/Projects/MyPawthereum/src/components/Badge/index.tsx":"249","/Users/msolomon/Projects/MyPawthereum/src/constants/testers/index.ts":"250","/Users/msolomon/Projects/MyPawthereum/src/constants/bugSquishers/index.ts":"251","/Users/msolomon/Projects/MyPawthereum/src/constants/proposals/index.ts":"252","/Users/msolomon/Projects/MyPawthereum/src/constants/originalSwappers/index.ts":"253","/Users/msolomon/Projects/MyPawthereum/src/components/WalletModal/Option.tsx":"254","/Users/msolomon/Projects/MyPawthereum/src/components/WalletModal/PendingView.tsx":"255","/Users/msolomon/Projects/MyPawthereum/src/constants/proposals/uniswap_grants.ts":"256","/Users/msolomon/Projects/MyPawthereum/src/components/AccountDetails/index.tsx":"257","/Users/msolomon/Projects/MyPawthereum/src/components/AccountDetails/Transaction.tsx":"258","/Users/msolomon/Projects/MyPawthereum/src/components/AccountDetails/Copy.tsx":"259","/Users/msolomon/Projects/MyPawthereum/src/hooks/useCopyClipboard.ts":"260","/Users/msolomon/Projects/MyPawthereum/src/components/vote/VoteModal.tsx":"261"},{"size":2607,"mtime":1635970919113,"results":"262","hashOfConfig":"263"},{"size":5200,"mtime":1625613168228,"results":"264","hashOfConfig":"263"},{"size":512,"mtime":1625613168218,"results":"265","hashOfConfig":"263"},{"size":676,"mtime":1625613168249,"results":"266","hashOfConfig":"263"},{"size":1915,"mtime":1625613168230,"results":"267","hashOfConfig":"263"},{"size":3586,"mtime":1625613168234,"results":"268","hashOfConfig":"263"},{"size":3262,"mtime":1635874596907,"results":"269","hashOfConfig":"263"},{"size":8696,"mtime":1625613168239,"results":"270","hashOfConfig":"263"},{"size":5149,"mtime":1635970792644,"results":"271","hashOfConfig":"263"},{"size":1020,"mtime":1625613168244,"results":"272","hashOfConfig":"263"},{"size":1121,"mtime":1625613168233,"results":"273","hashOfConfig":"263"},{"size":10208,"mtime":1636063488186,"results":"274","hashOfConfig":"263"},{"size":985,"mtime":1635874596906,"results":"275","hashOfConfig":"263"},{"size":1160,"mtime":1625613168233,"results":"276","hashOfConfig":"263"},{"size":6009,"mtime":1625613168233,"results":"277","hashOfConfig":"263"},{"size":711,"mtime":1625613168212,"results":"278","hashOfConfig":"263"},{"size":2022,"mtime":1625613168213,"results":"279","hashOfConfig":"263"},{"size":626,"mtime":1625613168214,"results":"280","hashOfConfig":"263"},{"size":786,"mtime":1625613168214,"results":"281","hashOfConfig":"263"},{"size":6899,"mtime":1636057491733,"results":"282","hashOfConfig":"263"},{"size":2843,"mtime":1635813977867,"results":"283","hashOfConfig":"263"},{"size":1748,"mtime":1625613168252,"results":"284","hashOfConfig":"263"},{"size":963,"mtime":1625613168241,"results":"285","hashOfConfig":"263"},{"size":1982,"mtime":1625613168237,"results":"286","hashOfConfig":"263"},{"size":1313,"mtime":1625613168246,"results":"287","hashOfConfig":"263"},{"size":7866,"mtime":1625613168212,"results":"288","hashOfConfig":"263"},{"size":1492,"mtime":1625613168243,"results":"289","hashOfConfig":"263"},{"size":471,"mtime":1625613168182,"results":"290","hashOfConfig":"263"},{"size":921,"mtime":1625613168245,"results":"291","hashOfConfig":"263"},{"size":2789,"mtime":1625613168186,"results":"292","hashOfConfig":"263"},{"size":8856,"mtime":1634766360515,"results":"293","hashOfConfig":"263"},{"size":26001,"mtime":1635614972033,"results":"294","hashOfConfig":"263"},{"size":25675,"mtime":1625613168222,"results":"295","hashOfConfig":"263"},{"size":14582,"mtime":1625613168223,"results":"296","hashOfConfig":"263"},{"size":13389,"mtime":1625613168220,"results":"297","hashOfConfig":"263"},{"size":1310,"mtime":1625613168225,"results":"298","hashOfConfig":"263"},{"size":11342,"mtime":1636208018532,"results":"299","hashOfConfig":"263"},{"size":981,"mtime":1625613168218,"results":"300","hashOfConfig":"263"},{"size":392,"mtime":1625613168204,"results":"301","hashOfConfig":"263"},{"size":7188,"mtime":1625613168204,"results":"302","hashOfConfig":"263"},{"size":531,"mtime":1625613168219,"results":"303","hashOfConfig":"263"},{"size":1573,"mtime":1625613168229,"results":"304","hashOfConfig":"263"},{"size":4006,"mtime":1625613168238,"results":"305","hashOfConfig":"263"},{"size":258,"mtime":1625613168232,"results":"306","hashOfConfig":"263"},{"size":2939,"mtime":1625613168211,"results":"307","hashOfConfig":"263"},{"size":6492,"mtime":1625613168210,"results":"308","hashOfConfig":"263"},{"size":1577,"mtime":1625613168209,"results":"309","hashOfConfig":"263"},{"size":404,"mtime":1625613168231,"results":"310","hashOfConfig":"263"},{"size":1706,"mtime":1625613168252,"results":"311","hashOfConfig":"263"},{"size":7290,"mtime":1625613168245,"results":"312","hashOfConfig":"263"},{"size":8375,"mtime":1635874596908,"results":"313","hashOfConfig":"263"},{"size":10762,"mtime":1636065881939,"results":"314","hashOfConfig":"263"},{"size":3739,"mtime":1625613168221,"results":"315","hashOfConfig":"263"},{"size":6911,"mtime":1625613168221,"results":"316","hashOfConfig":"263"},{"size":7037,"mtime":1625613168222,"results":"317","hashOfConfig":"263"},{"size":26037,"mtime":1625613168224,"results":"318","hashOfConfig":"263"},{"size":28674,"mtime":1625613168218,"results":"319","hashOfConfig":"263"},{"size":28878,"mtime":1635954703764,"results":"320","hashOfConfig":"263"},{"size":8167,"mtime":1625613168226,"results":"321","hashOfConfig":"263"},{"size":2081,"mtime":1625613168193,"results":"322","hashOfConfig":"263"},{"size":2293,"mtime":1625613168203,"results":"323","hashOfConfig":"263"},{"size":7258,"mtime":1625613168223,"results":"324","hashOfConfig":"263"},{"size":704,"mtime":1635274566482,"results":"325","hashOfConfig":"263"},{"size":35551,"mtime":1635605375837,"results":"326","hashOfConfig":"263"},{"size":788,"mtime":1625613168213,"results":"327","hashOfConfig":"263"},{"size":3654,"mtime":1635710485313,"results":"328","hashOfConfig":"263"},{"size":19192,"mtime":1634765823809,"results":"329","hashOfConfig":"263"},{"size":4525,"mtime":1625613168232,"results":"330","hashOfConfig":"263"},{"size":1900,"mtime":1625613168205,"results":"331","hashOfConfig":"263"},{"size":6156,"mtime":1635603659050,"results":"332","hashOfConfig":"263"},{"size":140,"mtime":1625613168231,"results":"333","hashOfConfig":"263"},{"size":584,"mtime":1625613168251,"results":"334","hashOfConfig":"263"},{"size":8203,"mtime":1625613168238,"results":"335","hashOfConfig":"263"},{"size":1905,"mtime":1625613168199,"results":"336","hashOfConfig":"263"},{"size":4100,"mtime":1635615505101,"results":"337","hashOfConfig":"263"},{"size":1395,"mtime":1625613168213,"results":"338","hashOfConfig":"263"},{"size":1597,"mtime":1625613168213,"results":"339","hashOfConfig":"263"},{"size":5071,"mtime":1625613168187,"results":"340","hashOfConfig":"263"},{"size":3934,"mtime":1625613168221,"results":"341","hashOfConfig":"263"},{"size":935,"mtime":1625613168184,"results":"342","hashOfConfig":"263"},{"size":3562,"mtime":1625613168181,"results":"343","hashOfConfig":"263"},{"size":253,"mtime":1625613168249,"results":"344","hashOfConfig":"263"},{"size":1844,"mtime":1625613168219,"results":"345","hashOfConfig":"263"},{"size":1131,"mtime":1625613168197,"results":"346","hashOfConfig":"263"},{"size":4230,"mtime":1625613168191,"results":"347","hashOfConfig":"263"},{"size":647,"mtime":1625613168183,"results":"348","hashOfConfig":"263"},{"size":11091,"mtime":1625613168183,"results":"349","hashOfConfig":"263"},{"size":2387,"mtime":1625613168219,"results":"350","hashOfConfig":"263"},{"size":1875,"mtime":1625613168208,"results":"351","hashOfConfig":"263"},{"size":992,"mtime":1625613168210,"results":"352","hashOfConfig":"263"},{"size":185,"mtime":1625613168250,"results":"353","hashOfConfig":"263"},{"size":3528,"mtime":1625613168216,"results":"354","hashOfConfig":"263"},{"size":3613,"mtime":1625613168248,"results":"355","hashOfConfig":"263"},{"size":1490,"mtime":1625613168183,"results":"356","hashOfConfig":"263"},{"size":634,"mtime":1625613168186,"results":"357","hashOfConfig":"263"},{"size":5794,"mtime":1625613168244,"results":"358","hashOfConfig":"263"},{"size":676,"mtime":1625613168217,"results":"359","hashOfConfig":"263"},{"size":406,"mtime":1625613168212,"results":"360","hashOfConfig":"263"},{"size":667,"mtime":1625613168216,"results":"361","hashOfConfig":"263"},{"size":9406,"mtime":1625613168239,"results":"362","hashOfConfig":"263"},{"size":322,"mtime":1625613168234,"results":"363","hashOfConfig":"263"},{"size":3658,"mtime":1625613168207,"results":"364","hashOfConfig":"263"},{"size":5604,"mtime":1625613168208,"results":"365","hashOfConfig":"263"},{"size":1575,"mtime":1625613168208,"results":"366","hashOfConfig":"263"},{"size":926,"mtime":1625613168252,"results":"367","hashOfConfig":"263"},{"size":2114,"mtime":1625613168217,"results":"368","hashOfConfig":"263"},{"size":3265,"mtime":1634766109373,"results":"369","hashOfConfig":"263"},{"size":158,"mtime":1625613168215,"results":"370","hashOfConfig":"263"},{"size":10258,"mtime":1625613168240,"results":"371","hashOfConfig":"263"},{"size":252,"mtime":1625613168145,"results":"372","hashOfConfig":"263"},{"size":2085,"mtime":1636063483505,"results":"373","hashOfConfig":"263"},{"size":671,"mtime":1625613168240,"results":"374","hashOfConfig":"263"},{"size":359,"mtime":1625613168214,"results":"375","hashOfConfig":"263"},{"size":3742,"mtime":1625613168217,"results":"376","hashOfConfig":"263"},{"size":724,"mtime":1625613168213,"results":"377","hashOfConfig":"263"},{"size":5297,"mtime":1625613168211,"results":"378","hashOfConfig":"263"},{"size":695,"mtime":1625613168236,"results":"379","hashOfConfig":"263"},{"size":7903,"mtime":1635874596901,"results":"380","hashOfConfig":"263"},{"size":2436,"mtime":1625613168211,"results":"381","hashOfConfig":"263"},{"size":1246,"mtime":1625613168213,"results":"382","hashOfConfig":"263"},{"size":773,"mtime":1625613168252,"results":"383","hashOfConfig":"263"},{"size":344,"mtime":1625613168251,"results":"384","hashOfConfig":"263"},{"size":1432,"mtime":1625613168248,"results":"385","hashOfConfig":"263"},{"size":2194,"mtime":1625613168211,"results":"386","hashOfConfig":"263"},{"size":957,"mtime":1625613168189,"results":"387","hashOfConfig":"263"},{"size":1156,"mtime":1625613168250,"results":"388","hashOfConfig":"263"},{"size":707,"mtime":1625613168214,"results":"389","hashOfConfig":"263"},{"size":1481,"mtime":1625613168217,"results":"390","hashOfConfig":"263"},{"size":7799,"mtime":1635874596903,"results":"391","hashOfConfig":"263"},{"size":1904,"mtime":1625613168201,"results":"392","hashOfConfig":"263"},{"size":2060,"mtime":1625613168196,"results":"393","hashOfConfig":"263"},{"size":3684,"mtime":1625613168215,"results":"394","hashOfConfig":"263"},{"size":665,"mtime":1625613168251,"results":"395","hashOfConfig":"263"},{"size":681,"mtime":1625613168216,"results":"396","hashOfConfig":"263"},{"size":7192,"mtime":1625613168235,"results":"397","hashOfConfig":"263"},{"size":914,"mtime":1625613168214,"results":"398","hashOfConfig":"263"},{"size":4270,"mtime":1625613168211,"results":"399","hashOfConfig":"263"},{"size":2032,"mtime":1625613168222,"results":"400","hashOfConfig":"263"},{"size":714,"mtime":1625613168220,"results":"401","hashOfConfig":"263"},{"size":2773,"mtime":1625613168251,"results":"402","hashOfConfig":"263"},{"size":341,"mtime":1625613168250,"results":"403","hashOfConfig":"263"},{"size":8495,"mtime":1625613168232,"results":"404","hashOfConfig":"263"},{"size":3297,"mtime":1625613168217,"results":"405","hashOfConfig":"263"},{"size":11937,"mtime":1635710485310,"results":"406","hashOfConfig":"263"},{"size":474,"mtime":1625613168216,"results":"407","hashOfConfig":"263"},{"size":8994,"mtime":1625613168213,"results":"408","hashOfConfig":"263"},{"size":997,"mtime":1625613168207,"results":"409","hashOfConfig":"263"},{"size":3397,"mtime":1625613168198,"results":"410","hashOfConfig":"263"},{"size":3858,"mtime":1625613168192,"results":"411","hashOfConfig":"263"},{"size":2548,"mtime":1635710485305,"results":"412","hashOfConfig":"263"},{"size":970,"mtime":1625613168226,"results":"413","hashOfConfig":"263"},{"size":821,"mtime":1625613168247,"results":"414","hashOfConfig":"263"},{"size":688,"mtime":1625613168247,"results":"415","hashOfConfig":"263"},{"size":4463,"mtime":1625613168208,"results":"416","hashOfConfig":"263"},{"size":655,"mtime":1625613168216,"results":"417","hashOfConfig":"263"},{"size":1598,"mtime":1625613168207,"results":"418","hashOfConfig":"263"},{"size":298,"mtime":1625613168230,"results":"419","hashOfConfig":"263"},{"size":1428,"mtime":1635874596904,"results":"420","hashOfConfig":"263"},{"size":3672,"mtime":1635874596903,"results":"421","hashOfConfig":"263"},{"size":4626,"mtime":1625613168207,"results":"422","hashOfConfig":"263"},{"size":3683,"mtime":1635715322964,"results":"423","hashOfConfig":"263"},{"size":5354,"mtime":1625613168230,"results":"424","hashOfConfig":"263"},{"size":1929,"mtime":1625613168206,"results":"425","hashOfConfig":"263"},{"size":1687,"mtime":1625613168219,"results":"426","hashOfConfig":"263"},{"size":1131,"mtime":1625613168218,"results":"427","hashOfConfig":"263"},{"size":1143,"mtime":1625613168212,"results":"428","hashOfConfig":"263"},{"size":12744,"mtime":1625613168194,"results":"429","hashOfConfig":"263"},{"size":7004,"mtime":1635874596902,"results":"430","hashOfConfig":"263"},{"size":1124,"mtime":1625613168185,"results":"431","hashOfConfig":"263"},{"size":10020,"mtime":1625613168184,"results":"432","hashOfConfig":"263"},{"size":1734,"mtime":1625613168202,"results":"433","hashOfConfig":"263"},{"size":6328,"mtime":1625613168204,"results":"434","hashOfConfig":"263"},{"size":2089,"mtime":1625613168220,"results":"435","hashOfConfig":"263"},{"size":8198,"mtime":1625613168204,"results":"436","hashOfConfig":"263"},{"size":501,"mtime":1625613168214,"results":"437","hashOfConfig":"263"},{"size":888,"mtime":1625613168212,"results":"438","hashOfConfig":"263"},{"size":3657,"mtime":1625613168217,"results":"439","hashOfConfig":"263"},{"size":16772,"mtime":1625613168236,"results":"440","hashOfConfig":"263"},{"size":1024,"mtime":1625613168214,"results":"441","hashOfConfig":"263"},{"size":1116,"mtime":1625613168189,"results":"442","hashOfConfig":"263"},{"size":514,"mtime":1625613168202,"results":"443","hashOfConfig":"263"},{"size":10624,"mtime":1636063201635,"results":"444","hashOfConfig":"263"},{"size":6007,"mtime":1625613168198,"results":"445","hashOfConfig":"263"},{"size":2195,"mtime":1625613168205,"results":"446","hashOfConfig":"263"},{"size":2578,"mtime":1625613168199,"results":"447","hashOfConfig":"263"},{"size":7827,"mtime":1625613168198,"results":"448","hashOfConfig":"263"},{"size":5143,"mtime":1635954703761,"results":"449","hashOfConfig":"263"},{"size":1225,"mtime":1635615206941,"results":"450","hashOfConfig":"263"},{"size":3934,"mtime":1625613168193,"results":"451","hashOfConfig":"263"},{"size":6880,"mtime":1625613168207,"results":"452","hashOfConfig":"263"},{"size":940,"mtime":1625613168206,"results":"453","hashOfConfig":"263"},{"size":3023,"mtime":1625613168200,"results":"454","hashOfConfig":"263"},{"size":2131,"mtime":1625613168212,"results":"455","hashOfConfig":"263"},{"size":1126,"mtime":1625613168184,"results":"456","hashOfConfig":"263"},{"size":2271,"mtime":1625613168194,"results":"457","hashOfConfig":"263"},{"size":7462,"mtime":1625613168194,"results":"458","hashOfConfig":"263"},{"size":545,"mtime":1625613168215,"results":"459","hashOfConfig":"263"},{"size":7557,"mtime":1625613168203,"results":"460","hashOfConfig":"263"},{"size":6310,"mtime":1635874596900,"results":"461","hashOfConfig":"263"},{"size":879,"mtime":1625613168236,"results":"462","hashOfConfig":"263"},{"size":536,"mtime":1625613168224,"results":"463","hashOfConfig":"263"},{"size":3656,"mtime":1625613168204,"results":"464","hashOfConfig":"263"},{"size":8251,"mtime":1625613168205,"results":"465","hashOfConfig":"263"},{"size":4303,"mtime":1625613168205,"results":"466","hashOfConfig":"263"},{"size":2273,"mtime":1625613168197,"results":"467","hashOfConfig":"263"},{"size":5837,"mtime":1625613168196,"results":"468","hashOfConfig":"263"},{"size":2677,"mtime":1625613168185,"results":"469","hashOfConfig":"263"},{"size":1431,"mtime":1625613168197,"results":"470","hashOfConfig":"263"},{"size":182,"mtime":1625613168251,"results":"471","hashOfConfig":"263"},{"size":1681,"mtime":1625613168200,"results":"472","hashOfConfig":"263"},{"size":2078,"mtime":1625613168191,"results":"473","hashOfConfig":"263"},{"size":1564,"mtime":1625613168207,"results":"474","hashOfConfig":"263"},{"size":4725,"mtime":1625613168199,"results":"475","hashOfConfig":"263"},{"size":12477,"mtime":1625613168199,"results":"476","hashOfConfig":"263"},{"size":2899,"mtime":1625613168200,"results":"477","hashOfConfig":"263"},{"size":13667,"mtime":1635874596902,"results":"478","hashOfConfig":"263"},{"size":3134,"mtime":1625613168199,"results":"479","hashOfConfig":"263"},{"size":1372,"mtime":1625613168211,"results":"480","hashOfConfig":"263"},{"size":7683,"mtime":1625613168198,"results":"481","hashOfConfig":"263"},{"size":1421,"mtime":1625613168195,"results":"482","hashOfConfig":"263"},{"size":2362,"mtime":1625613168198,"results":"483","hashOfConfig":"263"},{"size":1029,"mtime":1625613168206,"results":"484","hashOfConfig":"263"},{"size":2731,"mtime":1625613168192,"results":"485","hashOfConfig":"263"},{"size":3025,"mtime":1625613168192,"results":"486","hashOfConfig":"263"},{"size":769,"mtime":1625613168215,"results":"487","hashOfConfig":"263"},{"size":2068,"mtime":1625613168182,"results":"488","hashOfConfig":"263"},{"size":342,"mtime":1625613168249,"results":"489","hashOfConfig":"263"},{"size":1798,"mtime":1625613168215,"results":"490","hashOfConfig":"263"},{"size":274,"mtime":1625613168216,"results":"491","hashOfConfig":"263"},{"size":1438,"mtime":1625613168201,"results":"492","hashOfConfig":"263"},{"size":2425,"mtime":1625613168250,"results":"493","hashOfConfig":"263"},{"size":2825,"mtime":1625613168231,"results":"494","hashOfConfig":"263"},{"size":1936,"mtime":1625613168236,"results":"495","hashOfConfig":"263"},{"size":529,"mtime":1625613168230,"results":"496","hashOfConfig":"263"},{"size":6271,"mtime":1625613168234,"results":"497","hashOfConfig":"263"},{"size":1543,"mtime":1625613168235,"results":"498","hashOfConfig":"263"},{"size":2520,"mtime":1625613168241,"results":"499","hashOfConfig":"263"},{"size":1950,"mtime":1625613168242,"results":"500","hashOfConfig":"263"},{"size":5150,"mtime":1635874596908,"results":"501","hashOfConfig":"263"},{"size":4696,"mtime":1625613168217,"results":"502","hashOfConfig":"263"},{"size":11175,"mtime":1634129549879,"results":"503","hashOfConfig":"263"},{"size":765,"mtime":1625613168187,"results":"504","hashOfConfig":"263"},{"size":681,"mtime":1625613168249,"results":"505","hashOfConfig":"263"},{"size":7408,"mtime":1625613168195,"results":"506","hashOfConfig":"263"},{"size":2178,"mtime":1625613168196,"results":"507","hashOfConfig":"263"},{"size":575,"mtime":1625613168189,"results":"508","hashOfConfig":"263"},{"size":1693,"mtime":1625613168201,"results":"509","hashOfConfig":"263"},{"size":4391,"mtime":1625613168188,"results":"510","hashOfConfig":"263"},{"size":2000,"mtime":1625613168182,"results":"511","hashOfConfig":"263"},{"size":121,"mtime":1635434942868,"results":"512","hashOfConfig":"263"},{"size":251,"mtime":1635445750659,"results":"513","hashOfConfig":"263"},{"size":144,"mtime":1625613168209,"results":"514","hashOfConfig":"263"},{"size":44627,"mtime":1634671661023,"results":"515","hashOfConfig":"263"},{"size":3413,"mtime":1625613168202,"results":"516","hashOfConfig":"263"},{"size":3279,"mtime":1625613168203,"results":"517","hashOfConfig":"263"},{"size":9780,"mtime":1625613168210,"results":"518","hashOfConfig":"263"},{"size":11583,"mtime":1625613168181,"results":"519","hashOfConfig":"263"},{"size":2011,"mtime":1635713950402,"results":"520","hashOfConfig":"263"},{"size":1229,"mtime":1625613168180,"results":"521","hashOfConfig":"263"},{"size":633,"mtime":1625613168212,"results":"522","hashOfConfig":"263"},{"size":4704,"mtime":1625613168208,"results":"523","hashOfConfig":"263"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},"x989kb",{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"526"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"526"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"526"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"526"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"526"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"526"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"526"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"526"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"526"},"/Users/msolomon/Projects/MyPawthereum/src/index.tsx",[],[],"/Users/msolomon/Projects/MyPawthereum/src/serviceWorkerRegistration.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/i18n.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/getLibrary.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/application/updater.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/lists/updater.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/transactions/updater.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/multicall/updater.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/App.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/user/updater.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/application/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/lists/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/lists/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useDebounce.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useFetchListCallback.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useInterval.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useIsWindowVisible.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/theme/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/application/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/retry.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/transactions/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/multicall/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/chunkArray.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useContract.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/user/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Blocklist/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/theme/DarkModeQueryParamReader.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Header/Polling.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/v2.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/MigrateV2/MigrateV2Pair.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/PositionPage.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/RemoveLiquidity/V3.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Earn/Manage.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Swap/redirects.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Vote/VotePage.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/redirects.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/analytics/GoogleAnalyticsReporter.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/claim/AddressClaimModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/redirects.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/application/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/multicall/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/global/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/Tokens.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/lists.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/burn/v3/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/resolveENSContentHash.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/theme/components.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/user/hooks.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Header/index.tsx",["1055"],"import { ChainId } from '@uniswap/sdk-core'\nimport React, { useState } from 'react'\nimport { Text } from 'rebass'\nimport { NavLink } from 'react-router-dom'\nimport { darken } from 'polished'\nimport { useTranslation } from 'react-i18next'\nimport { Moon, Sun } from 'react-feather'\nimport styled from 'styled-components'\n\nimport Logo from '../../assets/images/myPawthLogo.png'\nimport LogoDark from '../../assets/images/myPawthLogo.png'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { useDarkModeManager } from '../../state/user/hooks'\nimport { useETHBalances } from '../../state/wallet/hooks'\nimport { CardNoise } from '../earn/styled'\nimport { TYPE, ExternalLink } from '../../theme'\n\nimport { YellowCard } from '../Card'\nimport Menu from '../Menu'\n\nimport Row, { RowFixed } from '../Row'\nimport Web3Status from '../Web3Status'\nimport ClaimModal from '../claim/ClaimModal'\nimport { useToggleSelfClaimModal, useShowClaimPopup } from '../../state/application/hooks'\nimport { useUserHasAvailableClaim } from '../../state/claim/hooks'\nimport { useUserHasSubmittedClaim } from '../../state/transactions/hooks'\nimport { Dots } from '../swap/styleds'\nimport Modal from '../Modal'\nimport UniBalanceContent from './UniBalanceContent'\n\nconst HeaderFrame = styled.div`\n  display: grid;\n  grid-template-columns: 120px 1fr 120px;\n  align-items: center;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  top: 0;\n  position: relative;\n  /* border-bottom: 1px solid ${({ theme }) => theme.bg2}; */\n  padding: 1rem;\n  z-index: 21;\n  background-color: ${({ theme }) => theme.bg1};\n  position: relative;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding:  1rem;\n    grid-template-columns: 120px 1fr;\n\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    padding: 1rem;\n  `}\n`\n\nconst HeaderControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-self: flex-end;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    flex-direction: row;\n    justify-content: space-between;\n    justify-self: center;\n    width: 100%;\n    max-width: 960px;\n    padding: 1rem;\n    position: fixed;\n    bottom: 0px;\n    left: 0px;\n    width: 100%;\n    z-index: 99;\n    height: 72px;\n    border-radius: 12px 12px 0 0;\n    background-color: ${({ theme }) => theme.bg1};\n  `};\n`\n\nconst HeaderElement = styled.div`\n  display: flex;\n  align-items: center;\n\n  /* addresses safari's lack of support for \"gap\" */\n  & > *:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n   flex-direction: row-reverse;\n    align-items: center;\n  `};\n`\n\nconst HeaderElementWrap = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderRow = styled(RowFixed)`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n   width: 100%;\n  `};\n`\n\nconst HeaderLinks = styled(Row)`\n  justify-self: center;\n  background-color: ${({ theme }) => theme.bg0};\n  width: fit-content;\n  padding: 4px;\n  border-radius: 16px;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 10px;\n  overflow: auto;\n`\n\nconst AccountElement = styled.div<{ active: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: ${({ theme, active }) => (!active ? theme.bg1 : theme.bg2)};\n  border-radius: 12px;\n  white-space: nowrap;\n  width: 100%;\n  cursor: pointer;\n\n  :focus {\n    border: 1px solid blue;\n  }\n`\n\nconst UNIAmount = styled(AccountElement)`\n  color: white;\n  padding: 4px 8px;\n  height: 36px;\n  font-weight: 500;\n  background-color: ${({ theme }) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #ff007a 0%, #2172e5 100%), #edeef2;\n`\n\nconst UNIWrapper = styled.span`\n  width: fit-content;\n  position: relative;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  :active {\n    opacity: 0.9;\n  }\n`\n\nconst HideSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nconst NetworkCard = styled(YellowCard)`\n  border-radius: 12px;\n  padding: 8px 12px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin: 0;\n    margin-right: 0.5rem;\n    width: initial;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-shrink: 1;\n  `};\n`\n\nconst BalanceText = styled(Text)`\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`\n\nconst Title = styled.a`\n  display: flex;\n  align-items: center;\n  pointer-events: auto;\n  justify-self: flex-start;\n  margin-right: 12px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    justify-self: center;\n  `};\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst UniIcon = styled.div`\n  transition: transform 0.3s ease;\n  :hover {\n    transform: rotate(-5deg);\n  }\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName,\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: left;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text2};\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n  padding: 8px 12px;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    font-weight: 600;\n    color: ${({ theme }) => theme.text1};\n    background-color: ${({ theme }) => theme.bg2};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, theme.text1)};\n  }\n`\n\nconst StyledExternalLink = styled(ExternalLink).attrs({\n  activeClassName,\n})<{ isActive?: boolean }>`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: left;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text2};\n  font-size: 1rem;\n  width: fit-content;\n  margin: 0 12px;\n  font-weight: 500;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    font-weight: 600;\n    color: ${({ theme }) => theme.text1};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, theme.text1)};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n      display: none;\n`}\n`\n\nexport const StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg2};\n  margin-left: 8px;\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n  [ChainId.RINKEBY]: 'Rinkeby',\n  [ChainId.ROPSTEN]: 'Ropsten',\n  [ChainId.GÖRLI]: 'Görli',\n  [ChainId.KOVAN]: 'Kovan',\n}\n\nexport default function Header() {\n  const { account, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const userEthBalance = useETHBalances(account ? [account] : [])?.[account ?? '']\n  // const [isDark] = useDarkModeManager()\n  const [darkMode, toggleDarkMode] = useDarkModeManager()\n\n  const toggleClaimModal = useToggleSelfClaimModal()\n\n  const availableClaim: boolean = useUserHasAvailableClaim(account)\n\n  const { claimTxn } = useUserHasSubmittedClaim(account ?? undefined)\n\n  const [showUniBalanceModal, setShowUniBalanceModal] = useState(false)\n  const showClaimPopup = useShowClaimPopup()\n\n  return (\n    <HeaderFrame>\n      <ClaimModal />\n      <Modal isOpen={showUniBalanceModal} onDismiss={() => setShowUniBalanceModal(false)}>\n        <UniBalanceContent setShowUniBalanceModal={setShowUniBalanceModal} />\n      </Modal>\n      <HeaderRow>\n        <Title href=\"https://pawthereum.com\">\n          <UniIcon>\n            <img width={'32px'} src={darkMode ? LogoDark : Logo} alt=\"logo\" />\n          </UniIcon>\n        </Title>\n        <TYPE.label>\n          BETA\n        </TYPE.label>\n      </HeaderRow>\n      <HeaderLinks>\n        <StyledNavLink \n          id={`stats-nav-link`} \n          to={'/stats'}\n          isActive={(match, { pathname }) =>\n            Boolean(match) ||\n            pathname.endsWith('/')\n          }\n        >\n          {t('MyPawth')}\n        </StyledNavLink>\n        <StyledNavLink \n          id={`swap-nav-link`} \n          to={'/swap?use=V2&inputCurrency=ETH&outputCurrency=0xaecc217a749c2405b5ebc9857a16d58bdc1c367f'}\n        >\n          {t('PawSwap')}\n        </StyledNavLink>\n        {/* <StyledNavLink\n          id={`pool-nav-link`}\n          to={'/pool/v2'}\n          isActive={(match, { pathname }) =>\n            Boolean(match) ||\n            pathname.startsWith('/add') ||\n            pathname.startsWith('/remove') ||\n            pathname.startsWith('/increase') ||\n            pathname.startsWith('/find')\n          }\n        >\n          {t('pool')}\n        </StyledNavLink> */}\n        {/* <StyledNavLink id={`stake-nav-link`} to={'/vote'}>\n          Vote\n        </StyledNavLink>\n        <StyledExternalLink id={`stake-nav-link`} href={'https://info.uniswap.org'}>\n          Charts <span style={{ fontSize: '11px', textDecoration: 'none !important' }}>↗</span>\n        </StyledExternalLink> */}\n        {/* <StyledNavLink \n          id={`feedback-nav-link`} \n          to={'/feedback'}\n          isActive={(match, { pathname }) =>\n            Boolean(match) ||\n            pathname.startsWith('/feedback')\n          }\n        >\n          {t('Feedback')}\n        </StyledNavLink> */}\n      </HeaderLinks>\n      <HeaderControls>\n        <HeaderElement>\n          <HideSmall>\n            {chainId && NETWORK_LABELS[chainId] && (\n              <NetworkCard title={NETWORK_LABELS[chainId]}>{NETWORK_LABELS[chainId]}</NetworkCard>\n            )}\n          </HideSmall>\n          {availableClaim && !showClaimPopup && (\n            <UNIWrapper onClick={toggleClaimModal}>\n              <UNIAmount active={!!account && !availableClaim} style={{ pointerEvents: 'auto' }}>\n                <TYPE.white padding=\"0 2px\">\n                  {claimTxn && !claimTxn?.receipt ? <Dots>Claiming UNI</Dots> : 'Claim UNI'}\n                </TYPE.white>\n              </UNIAmount>\n              <CardNoise />\n            </UNIWrapper>\n          )}\n          <AccountElement active={!!account} style={{ pointerEvents: 'auto' }}>\n            {account && userEthBalance ? (\n              <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" pr=\"0.5rem\" fontWeight={500}>\n                {userEthBalance?.toSignificant(4)} ETH\n              </BalanceText>\n            ) : null}\n            <Web3Status />\n          </AccountElement>\n        </HeaderElement>\n        <HeaderElementWrap>\n          <StyledMenuButton onClick={() => toggleDarkMode()}>\n            {darkMode ? <Moon size={20} /> : <Sun size={20} />}\n          </StyledMenuButton>\n          <Menu />\n        </HeaderElementWrap>\n      </HeaderControls>\n    </HeaderFrame>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/pages/Earn/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/MigrateV2/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/RemoveLiquidity/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Swap/index.tsx",["1056"],"import { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport { AdvancedSwapDetails } from 'components/swap/AdvancedSwapDetails'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { MouseoverTooltip, MouseoverTooltipContent } from 'components/Tooltip'\nimport JSBI from 'jsbi'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown, CheckCircle, HelpCircle, Info, ArrowLeft } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { ThemeContext } from 'styled-components'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonGray, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { GreyCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport Loader from '../../components/Loader'\nimport Row, { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport BetterTradeLink from '../../components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport CompleteSwapModal from '../../components/swap/CompleteSwapModal'\n\nimport { ArrowWrapper, BottomGrouping, Dots, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport SwapHeader from '../../components/swap/SwapHeader'\nimport TradePrice from '../../components/swap/TradePrice'\nimport TokenWarningModal from '../../components/TokenWarningModal'\nimport Rank from '../../components/Rank'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { V3TradeState } from '../../hooks/useBestV3Trade'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useERC20PermitFromTrade, UseERC20PermitState } from '../../hooks/useERC20Permit'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion'\nimport { useUSDCValue } from '../../hooks/useUSDCPrice'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSingleHopOnly, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { ExternalLink, HideSmall, LinkStyledButton, TYPE } from '../../theme'\nimport { computeFiatValuePriceImpact } from '../../utils/computeFiatValuePriceImpact'\nimport { computePriceImpactWithMaximumSlippage } from '../../utils/computePriceImpactWithMaximumSlippage'\nimport { getTradeVersion } from '../../utils/getTradeVersion'\nimport { isTradeBetter } from '../../utils/isTradeBetter'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { ApplicationModal } from 'state/application/actions'\n\nimport pawswapLogo from '../../assets/images/pawswapLogo.png'\n\nconst StyledInfo = styled(Info)`\n  opacity: 0.4;\n  color: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst StyledSwapHeader = styled.div`\n  padding: 1rem 1.25rem 0.5rem 1.25rem;\n  width: 100%;\n  color: ${({ theme }) => theme.text2};\n`\nconst StyledSwapHeaderTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.text2};\n  \n  :hover {\n    opacity: 0.7;\n    cursor: pointer;\n  }\n`\nconst StyledSwapHeaderTitle = styled.div`\n  margin-left: 0.5rem;\n  color: ${({ theme }) => theme.text2};\n`\nconst PaddedAutoColumn = styled(AutoColumn)`\n  padding: 20px;\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !Boolean(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v2Trade,\n    v3TradeState: { trade: v3Trade, state: v3TradeState },\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo()\n\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const trade = showWrap\n    ? undefined\n    : {\n        [Version.v2]: v2Trade,\n        [Version.v3]: v3Trade ?? undefined,\n      }[toggledVersion]\n\n  const parsedAmounts = useMemo(\n    () =>\n      showWrap\n        ? {\n            [Field.INPUT]: parsedAmount,\n            [Field.OUTPUT]: parsedAmount,\n          }\n        : {\n            [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.maximumAmountIn(allowedSlippage),\n            [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.minimumAmountOut(allowedSlippage),\n          },\n    [allowedSlippage, independentField, parsedAmount, showWrap, trade]\n  )\n\n  const fiatValueInput = useUSDCValue(parsedAmounts[Field.INPUT])\n  const fiatValueOutput = useUSDCValue(parsedAmounts[Field.OUTPUT])\n  const priceImpact = computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput)\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n    history.push('/swap/')\n  }, [history])\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: V2Trade | V3Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const routeNotFound = !trade?.route\n  const isLoadingRoute = toggledVersion === Version.v3 && V3TradeState.LOADING === v3TradeState\n\n  // check whether the user has approved the router on the input token\n  const [approvalState, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n  const { state: signatureState, signatureData, gatherPermitSignature } = useERC20PermitFromTrade(\n    trade,\n    allowedSlippage\n  )\n\n  const handleApprove = useCallback(async () => {\n    if (signatureState === UseERC20PermitState.NOT_SIGNED && gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveCallback()\n        }\n      }\n    } else {\n      await approveCallback()\n    }\n  }, [approveCallback, gatherPermitSignature, signatureState])\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approvalState, approvalSubmitted])\n\n  const maxInputAmount: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const showMaxButton = Boolean(maxInputAmount?.greaterThan(0) && !parsedAmounts[Field.INPUT]?.equalTo(maxInputAmount))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n    signatureData\n  )\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return\n    }\n    if (priceImpact && !confirmPriceImpactWithoutFee(priceImpact)) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [\n            trade?.inputAmount?.currency?.symbol,\n            trade?.outputAmount?.currency?.symbol,\n            getTradeVersion(trade),\n            singleHopOnly ? 'SH' : 'MH',\n          ].join('/'),\n        })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [\n    priceImpact,\n    swapCallback,\n    tradeToConfirm,\n    showConfirm,\n    recipient,\n    recipientAddress,\n    account,\n    trade,\n    singleHopOnly,\n  ])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on the greater of fiat value price impact and execution price impact\n  const priceImpactSeverity = useMemo(() => {\n    const executionPriceImpact = trade ? computePriceImpactWithMaximumSlippage(trade, allowedSlippage) : undefined\n    return warningSeverity(\n      executionPriceImpact && priceImpact\n        ? executionPriceImpact.greaterThan(priceImpact)\n          ? executionPriceImpact\n          : priceImpact\n        : executionPriceImpact ?? priceImpact\n    )\n  }, [allowedSlippage, priceImpact, trade])\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleCompleteDismiss = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    handleConfirmDismiss()\n    setUserClosedTransactionCompleteModal(true)\n  }, [])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact())\n  }, [maxInputAmount, onUserInput])\n\n  const handleOutputSelect = useCallback((outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency), [\n    onCurrencySelection,\n  ])\n\n  const swapIsUnsupported = useIsSwapUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode\n\n  const [userClosedTransactionCompleteModal, setUserClosedTransactionCompleteModal] = useState<boolean>(false)\n  const openTransactionCompleteModal = useModalOpen(ApplicationModal.TRANSACTION_COMPLETE)\n  const showTransactionCompleteModal = openTransactionCompleteModal && !userClosedTransactionCompleteModal \n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n        onDismiss={handleDismissTokenWarning}\n      />\n      <AppBody>\n        <PaddedAutoColumn>\n          <img src={pawswapLogo} alt=\"PawSwap Logo\" style={{ width: '100%' }} />\n        </PaddedAutoColumn>\n      </AppBody>\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm && !openTransactionCompleteModal}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <CompleteSwapModal\n            isOpen={showTransactionCompleteModal}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleCompleteDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <div style={{ display: 'relative' }}>\n              <CurrencyInputPanel\n                label={independentField === Field.OUTPUT && !showWrap ? 'From (at most)' : 'From'}\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={showMaxButton}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                fiatValue={fiatValueInput ?? undefined}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                showCommonBases={true}\n                id=\"swap-currency-input\"\n              />\n              <ArrowWrapper clickable>\n                <ArrowDown\n                  size=\"16\"\n                  onClick={() => {\n                    setApprovalSubmitted(false) // reset 2 step UI for approvals\n                    onSwitchTokens()\n                  }}\n                  color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.text1 : theme.text3}\n                />\n              </ArrowWrapper>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={independentField === Field.INPUT && !showWrap ? 'To (at least)' : 'To'}\n                showMaxButton={false}\n                hideBalance={false}\n                fiatValue={fiatValueOutput ?? undefined}\n                priceImpact={priceImpact}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                showCommonBases={true}\n                id=\"swap-currency-output\"\n              />\n            </div>\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            <Row style={{ justifyContent: !trade ? 'center' : 'space-between' }}>\n              <RowFixed>\n                {[V3TradeState.VALID, V3TradeState.SYNCING, V3TradeState.NO_ROUTE_FOUND].includes(v3TradeState) &&\n                  (toggledVersion === Version.v3 && isTradeBetter(v3Trade, v2Trade) ? (\n                    <BetterTradeLink version={Version.v2} otherTradeNonexistent={!v3Trade} />\n                  ) : toggledVersion === Version.v2 && isTradeBetter(v2Trade, v3Trade) ? (\n                    <BetterTradeLink version={Version.v3} otherTradeNonexistent={!v2Trade} />\n                  ) : (\n                    toggledVersion === Version.v2 && (\n                      <ButtonGray\n                        width=\"fit-content\"\n                        padding=\"0.1rem 0.5rem 0.1rem 0.35rem\"\n                        as={Link}\n                        to=\"/swap\"\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          height: '24px',\n                          opacity: 0.8,\n                          lineHeight: '120%',\n                          marginLeft: '0.75rem',\n                        }}\n                      >\n                        <ArrowLeft color={theme.text3} size={12} /> &nbsp;\n                        <TYPE.main style={{ lineHeight: '120%' }} fontSize={12}>\n                          <HideSmall>Back to </HideSmall>V3\n                        </TYPE.main>\n                      </ButtonGray>\n                    )\n                  ))}\n\n                {toggledVersion === Version.v3 && trade && isTradeBetter(v2Trade, v3Trade) && (\n                  <ButtonGray\n                    width=\"fit-content\"\n                    padding=\"0.1rem 0.5rem\"\n                    disabled\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      height: '24px',\n                      opacity: 0.4,\n                      marginLeft: '0.25rem',\n                    }}\n                  >\n                    <TYPE.black fontSize={12}>V3</TYPE.black>\n                  </ButtonGray>\n                )}\n              </RowFixed>\n              {trade ? (\n                <RowFixed>\n                  <TradePrice\n                    price={trade.worstExecutionPrice(allowedSlippage)}\n                    showInverted={showInverted}\n                    setShowInverted={setShowInverted}\n                  />\n                  <MouseoverTooltipContent content={<AdvancedSwapDetails trade={trade} />}>\n                    <StyledInfo />\n                  </MouseoverTooltipContent>\n                </RowFixed>\n              ) : null}\n            </Row>\n\n            <BottomGrouping>\n              {swapIsUnsupported ? (\n                <ButtonPrimary disabled={true}>\n                  <TYPE.main mb=\"4px\">Unsupported Asset</TYPE.main>\n                </ButtonPrimary>\n              ) : !account ? (\n                <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n              ) : showWrap ? (\n                <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </ButtonPrimary>\n              ) : routeNotFound && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <TYPE.main mb=\"4px\">\n                    {isLoadingRoute ? (\n                      <Dots>Loading</Dots>\n                    ) : (\n                      `Insufficient liquidity for this trade.${singleHopOnly ? ' Try enabling multi-hop trades.' : ''}`\n                    )}\n                  </TYPE.main>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <AutoRow style={{ flexWrap: 'nowrap', width: '100%' }}>\n                  <AutoColumn style={{ width: '100%' }} gap=\"12px\">\n                    <ButtonConfirmed\n                      onClick={handleApprove}\n                      disabled={\n                        approvalState !== ApprovalState.NOT_APPROVED ||\n                        approvalSubmitted ||\n                        signatureState === UseERC20PermitState.SIGNED\n                      }\n                      width=\"100%\"\n                      altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                      confirmed={\n                        approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED\n                      }\n                    >\n                      <AutoRow justify=\"space-between\">\n                        <span style={{ display: 'flex', alignItems: 'center' }}>\n                          <CurrencyLogo\n                            currency={currencies[Field.INPUT]}\n                            size={'20px'}\n                            style={{ marginRight: '8px' }}\n                          />\n                          {/* we need to shorten this string on mobile */}\n                          {approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED\n                            ? 'You can now trade ' + currencies[Field.INPUT]?.symbol\n                            : 'Allow the Uniswap Protocol to use your ' + currencies[Field.INPUT]?.symbol}\n                        </span>\n                        {approvalState === ApprovalState.PENDING ? (\n                          <Loader stroke=\"white\" />\n                        ) : (approvalSubmitted && approvalState === ApprovalState.APPROVED) ||\n                          signatureState === UseERC20PermitState.SIGNED ? (\n                          <CheckCircle size=\"20\" color={theme.green1} />\n                        ) : (\n                          <MouseoverTooltip\n                            text={\n                              'You must give the Uniswap smart contracts permission to use your ' +\n                              currencies[Field.INPUT]?.symbol +\n                              '. You only have to do this once per token.'\n                            }\n                          >\n                            <HelpCircle size=\"20\" color={'white'} />\n                          </MouseoverTooltip>\n                        )}\n                      </AutoRow>\n                    </ButtonConfirmed>\n                    <ButtonError\n                      onClick={() => {\n                        if (isExpertMode) {\n                          handleSwap()\n                        } else {\n                          setSwapState({\n                            tradeToConfirm: trade,\n                            attemptingTxn: false,\n                            swapErrorMessage: undefined,\n                            showConfirm: true,\n                            txHash: undefined,\n                          })\n                        }\n                      }}\n                      width=\"100%\"\n                      id=\"swap-button\"\n                      disabled={\n                        !isValid ||\n                        (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) ||\n                        priceImpactTooHigh\n                      }\n                      error={isValid && priceImpactSeverity > 2}\n                    >\n                      <Text fontSize={16} fontWeight={500}>\n                        {priceImpactTooHigh ? `High Price Impact` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                      </Text>\n                    </ButtonError>\n                  </AutoColumn>\n                </AutoRow>\n              ) : (\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || priceImpactTooHigh || !!swapCallbackError}\n                  error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {swapInputError\n                      ? swapInputError\n                      : priceImpactTooHigh\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              )}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      { account ? (\n        <AppBody>\n          <StyledSwapHeader>\n            <RowBetween>\n              <RowFixed>\n                <TYPE.black fontWeight={500} fontSize={16} style={{ marginRight: '8px' }}>\n                  Rank{' '}\n                </TYPE.black>\n              </RowFixed>\n              <RowFixed>\n                <ExternalLink href={'https://cdn.discordapp.com/attachments/891351589162483732/895435039834251364/wcc2.png'} style={{ textDecoration: 'none' }}>\n                  <StyledSwapHeaderTitleWrapper>\n                    <HelpCircle /> <StyledSwapHeaderTitle>Learn More</StyledSwapHeaderTitle>\n                  </StyledSwapHeaderTitleWrapper>\n                </ExternalLink>\n              </RowFixed>\n            </RowBetween>\n          </StyledSwapHeader>\n          <AutoColumn gap={'md'}>\n            <Rank refresh={showTransactionCompleteModal} />\n          </AutoColumn>\n        </AppBody>\n      ) : '' }\n      {!swapIsUnsupported ? null : (\n        <UnsupportedCurrencyFooter show={swapIsUnsupported} currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/pages/Vote/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Popups/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Web3ReactManager/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/PoolFinder/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Feedback/index.tsx",["1057","1058"],"import React, { useEffect, useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { Widget } from '@typeform/embed-react'\nimport { isMobile } from 'react-device-detect'\n\nconst PageWrapper = styled(AutoColumn)``\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 768px;\n  width: 100%;\n`\n\n\nexport default function Feedback () {\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\" style={{ \n        width: isMobile ? '100%' : '768px',\n        height: isMobile ? '550px' : '768px'\n      }}>\n        <Widget id=\"wrFn178G\" style={{ width:\"100%\", height:\"100%\" }}/>\n      </TopSection>\n    </PageWrapper>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/pages/Stats/index.tsx",["1059","1060","1061","1062","1063","1064","1065"],"import React, { useEffect, useState } from 'react'\nimport { HelpCircle } from 'react-feather'\nimport { ORIGINAL_SWAPPERS, BUG_SQUISHERS, TESTERS, CAT_DAY_VISITORS } from './../../constants/index'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { TYPE } from '../../theme'\nimport { RowBetween, AutoRow } from '../../components/Row'\nimport { CardBGImage, CardNoise, CardSection, DataCard } from '../../components/earn/styled'\nimport { useActiveWeb3React } from '../../hooks'\nimport logo from '../../assets/images/pawth-logo-transparent.png'\n// Ranks\nimport strayCat from '../../assets/images/strayCat.png'\nimport kitten from '../../assets/images/kitten.png'\nimport dwarfCat from '../../assets/images/dwarfCat.png'\nimport maineCoon from '../../assets/images/maineCoon.png'\nimport abbysinian from '../../assets/images/abbysinian.png'\nimport siamese from '../../assets/images/siamese.png'\nimport sandCat from '../../assets/images/sandCat.png'\nimport serval from '../../assets/images/serval.png'\nimport puma from '../../assets/images/puma.png'\nimport jaguar from '../../assets/images/jaguar.png'\nimport blackPanther from '../../assets/images/blackPanther.png'\nimport tiger from '../../assets/images/tiger.png'\nimport lion from '../../assets/images/lion.png'\nimport crown from '../../assets/images/crown.png'\nimport sadCat from '../../assets/images/sadCat.png'\n// Awards\nimport swap from '../../assets/images/swap.png'\nimport vote from '../../assets/images/vote.png'\nimport diamondPaws from '../../assets/images/diamondPaws.png'\nimport fist from '../../assets/images/fist.png'\nimport wildcat from '../../assets/images/wildcat.png'\nimport bug from '../../assets/images/bug.png'\nimport catDay from '../../assets/images/catDay.png'\nimport shibaInuLp from '../../assets/images/shibaInuLp.png'\nimport uniLp from '../../assets/images/uniLp.png'\nimport heartSparkle from '../../assets/images/heartSparkle.png'\n\nconst PageWrapper = styled(AutoColumn)``\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst InfoCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`\n\nconst WrapSmall = styled(RowBetween)`\n  margin-bottom: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n  `};\n`\n\nconst MainContentWrapper = styled.main`\n  background-color: ${({ theme }) => theme.bg0};\n  padding: 32px;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n`\nconst PaddedAutoColumn = styled(AutoColumn)`\n  padding: 12px;\n`\n\nexport const StyledHelpButton = styled.button`\n  position: relative;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg2};\n  margin-left: 8px;\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst ethescanApiKey = 'SZYGYXBA7K6ECH7DHB3QX2MR7GJZQK2M8P'\nconst ethplorerApiKey = process.env.REACT_APP_ETHPLORER_API_KEY || ''\nconst grumpyContractAddress = '0xaecc217a749c2405b5ebc9857a16d58bdc1c367f'\nconst pawthCharityWallet = '0xf4a22c530e8cc64770c4edb5766d26f8926e20bd'\nconst pawthMarketingWallet = '0x16b1db77b60c8d8b6ecea0fa4e0481e9f53c9ba1'\n\nexport default function Stats() {\n  const { account } = useActiveWeb3React()\n\n  // wallet state vars\n  const [grumpyBalance, setGrumpyBalance] = useState(0)\n  const [grumpyBalanceWithoutRedistribution, setGrumpyBalanceWithoutRedistribution] = useState(0)\n  const [grumpyUsdValue, setGrumpyUsdValue] = useState('-')\n  const [redistributedAmount, setRedistributedAmount] = useState(0)\n  const [redistributedUsdValue, setRedistributedUsdValue] = useState('-')\n  const [totalIn, setTotalIn] = useState(0)\n  const [totalOut, setTotalOut] = useState(0)\n  \n  // price state vars\n  const [price, setPrice] = useState('-')\n  const [marketCap, setMarketCap] = useState('-')\n\n  // charity wallet state vars\n  const [charityOneDayTotal, setCharityOneDayTotal] = useState(0)\n  const [charityOneDayUsd, setCharityWalletOneDayUsd] = useState('-')\n  const [charityAllTimeTotal, setCharityAllTimeTotal] = useState(0)\n  const [charityWalletAllTimeUsd, setCharityWalletAllTimeUsd] = useState('-')\n  const [charityTransferredOut, setCharityTransferredOut] = useState(0)\n  const [charityTransferredOutUsd, setCharityTransferredOutUsd] = useState('-')\n\n  // rank state vars\n  const [previousPawthRank, setPreviousPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [pawthRank, setPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [nextPawthRank, setNextPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [distanceToNextRank, setDistanceToNextRank] = useState('-')\n  const [distanceToPreviousRank, setDistanceToPreviousRank] = useState('-')\n\n  // for testing\n  const [isTester, setIsTester] = useState(false)\n\n  // awards state vars\n  const [isOriginalSwapper, setIsOriginalSwapper] = useState(false)\n  const [isDiamondHands, setIsDiamondHands] = useState(false)\n  const [isVoter, setIsVoter] = useState(false)\n  const [isHolder, setIsHolder] = useState(false)\n  const [isInWildCatClub, setIsInWildCatClub] = useState(false)\n  const [isBugSquisher, setIsBugSquisher] = useState(false)\n  const [isCatDayVisitor, setIsCatDayVisitor] = useState(false)\n  const [isShibaLpProvider, setIsShibaLpProvider] = useState(false)\n  const [isUniswapLpProvider, setIsUniswapLpProvider] = useState(false)\n  const [isMarketingDonor, setIsMarketingDonor] = useState(false)\n\n  function openRankMenu () {\n    const rankMenuLink = 'https://cdn.discordapp.com/attachments/891351589162483732/895435039834251364/wcc2.png'\n    window.open(rankMenuLink);\n  }\n\n  function formatPrice(price: number) {\n    if (price > 0) {\n      const priceString = (price / 1000000000).toLocaleString('en-US', {\n        maximumFractionDigits: 0,\n      })\n\n      return priceString\n    }\n\n    return price.toString()\n  }\n\n  function formatPriceUsd(price: number) {\n    if (price > 0) {\n      return (price / 1000000000).toLocaleString('en-US', {\n        maximumFractionDigits: 0,\n      })\n    }\n\n    return price.toString()\n  }\n\n  async function getGrumpyStats(balance: number, redistributedAmount: number, charityOneDayTotal: number) {\n    const stats_api = new URL('https://api.ethplorer.io/getTokenInfo/0xaecc217a749c2405b5ebc9857a16d58bdc1c367f')\n    stats_api.searchParams.append('apiKey', ethplorerApiKey)\n\n    const statsReq = await fetch(stats_api.href)\n    const statsRes = await statsReq.json()\n\n    if (!statsRes.hasOwnProperty('error')) {\n      const price = statsRes.price\n      const userGrumpyValueInUsd = balance * price.rate\n      const userRedistributedValueInUsd = redistributedAmount * price.rate\n\n      const charityWalletAllTimeUsd = charityAllTimeTotal * price.rate\n      const charityWalletTodayUsd = charityOneDayTotal * price.rate\n      const charityTransferredOutUsd = charityTransferredOut * price.rate\n\n      setPrice(price.rate ? '$' + price.rate.toFixed(6) : '-')\n\n      // TODO: once market cap starts coming back in the API, use that\n      // setMarketCap(\n      //   price.rate \n      //   ?\n      //     '$' +\n      //       price.marketCapUsd.toLocaleString(undefined, {\n      //         maximumFractionDigits: 0,\n      //       })\n      //   :\n      //     '-'\n      // )\n      const hardcodedSupply = 858000000 // hardcode supply until we get mc data in api\n      setMarketCap(\n        price.rate \n        ?\n          '$' +\n            (price.rate * hardcodedSupply).toLocaleString(undefined, {\n              maximumFractionDigits: 0,\n            })\n        :\n          '-'\n      )\n      setGrumpyUsdValue(\n        isNaN(userGrumpyValueInUsd) \n        ?\n          '-'\n        :\n          '$' + formatPriceUsd(userGrumpyValueInUsd)\n      )\n      setRedistributedUsdValue(\n        isNaN(userRedistributedValueInUsd) \n        ?\n          '-'\n        :\n          '$' + formatPriceUsd(userRedistributedValueInUsd)\n      )\n      // TODO: when you are ready to show all time charity stats, pass the \n      // charityWalletAllTimeUsd data into this getStats function to \n      // avoid race conditions\n      setCharityWalletAllTimeUsd(\n        isNaN(charityWalletAllTimeUsd)\n        ?\n          '-'\n        :\n          '$' + formatPriceUsd(charityWalletAllTimeUsd)\n      )\n      setCharityWalletOneDayUsd(\n        isNaN(charityWalletTodayUsd)\n        ?\n          '-'\n        :\n          '$' + formatPriceUsd(charityWalletTodayUsd)\n      )\n      setCharityTransferredOutUsd(\n        isNaN(charityTransferredOutUsd)\n        ?\n          '-'\n        :\n          '$' + formatPriceUsd(charityTransferredOutUsd)\n      )\n    }\n  }\n\n  async function getWallet() {\n    if (account) {\n      const charityTx = await getCharityWalletTransaction()\n      setCharityOneDayTotal(charityTx.oneDayTotal)\n      setCharityAllTimeTotal(charityTx.totalIn)\n      setCharityTransferredOut(charityTx.totalOut)\n\n      const balance = await getGrumpyBalance(account)\n      const tx = await getGrumpyTransaction(account, balance)\n      const ranks = await getPawthRanks(balance)\n      const isVoter = await getVoterStatus(account)\n\n      const ethTransactions = await getEthTransaction(account)\n      setIsMarketingDonor(ethTransactions.isMarketingWalletDonor)\n      \n      getGrumpyStats(balance, tx.redistribution, charityTx.oneDayTotal)\n\n      setGrumpyBalance(balance)\n\n      setPreviousPawthRank(ranks.previousRank)\n      setPawthRank(ranks.rank)\n      setNextPawthRank(ranks.nextRank)\n      setDistanceToNextRank(ranks.distanceToNextRank)\n      setDistanceToPreviousRank(ranks.distanceToPreviousRank)\n\n      setTotalIn(tx.totalIn)\n      setTotalOut(tx.totalOut)\n      setRedistributedAmount(tx.redistribution)\n      setGrumpyBalanceWithoutRedistribution(tx.balanceWithoutRedistribution)\n\n      setIsOriginalSwapper(ORIGINAL_SWAPPERS.includes(account.toLowerCase()))\n      setIsBugSquisher(BUG_SQUISHERS.includes(account.toLowerCase()))\n      setIsTester(TESTERS.includes(account.toLowerCase()))\n      setIsVoter(isVoter)\n\n      const shibaLpTokenAddr = '0xc57dc778a0d2d150d04fc0fd09a0113ebe9d600c'\n      const shibaLpTokenBalance = await getTokenBalance(account, shibaLpTokenAddr, 18)\n      if (shibaLpTokenBalance.balance > 0) {\n        setIsShibaLpProvider(true)\n      }\n\n      const uniswapLpTokenAddr = '0x800a45f2b861229d59e952aef57b22e84ff949a1'\n      const uniswapLpTokenBalance = await getTokenBalance(account, uniswapLpTokenAddr, 18)\n      if (uniswapLpTokenBalance.balance > 0) {\n        setIsUniswapLpProvider(true)\n      }\n\n      setIsCatDayVisitor(CAT_DAY_VISITORS.includes(account.toLowerCase()))\n    }\n  }\n\n  async function getVoterStatus(account: string) {\n    return fetch('https://hub.snapshot.org/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: `\n          query Votes {\n            votes (\n              first: 1000\n              skip: 0\n              where: {\n                space_in: [\"pawthereum.eth\"]\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n            ) {\n              voter\n            }\n          }        \n        `,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const votes = result.data.votes\n        const voters = Object.entries(votes).map((v: any) => v[1].voter)\n        return voters.includes(account)\n      })\n  }\n\n  async function getGrumpyBalance(account: string) {\n    const balance_api = new URL('https://api.etherscan.io/api')\n\n    balance_api.searchParams.append('module', 'account')\n    balance_api.searchParams.append('action', 'tokenbalance')\n    balance_api.searchParams.append('contractaddress', grumpyContractAddress)\n    balance_api.searchParams.append('address', account)\n    balance_api.searchParams.append('tag', 'latest')\n    balance_api.searchParams.append('apikey', ethescanApiKey)\n\n    const balanceReq = await fetch(balance_api.href)\n    const balanceRes = await balanceReq.json()\n    const balance = parseFloat(balanceRes.result)\n\n    const formattedBalance = balance / 1000000000\n    if (formattedBalance >= 1) {\n      setIsHolder(true)\n    }\n    if (formattedBalance >= 100000) {\n      setIsInWildCatClub(true)\n    }\n\n    return balance\n  }\n\n  async function getTokenBalance(account: string, tokenAddr: string, tokenDecimals: number) {\n    const balance_api = new URL('https://api.etherscan.io/api')\n\n    balance_api.searchParams.append('module', 'account')\n    balance_api.searchParams.append('action', 'tokenbalance')\n    balance_api.searchParams.append('contractaddress', tokenAddr)\n    balance_api.searchParams.append('address', account)\n    balance_api.searchParams.append('tag', 'latest')\n    balance_api.searchParams.append('apikey', ethescanApiKey)\n\n    const balanceReq = await fetch(balance_api.href)\n    const balanceRes = await balanceReq.json()\n    const balance = parseFloat(balanceRes.result)\n\n    const formattedBalance = balance / 10**tokenDecimals\n    return { balance, formattedBalance }\n  }\n\n  async function getEthTransaction(account: string) {\n    const transactions_api = new URL('https://api.etherscan.io/api')\n\n    transactions_api.searchParams.append('module', 'account')\n    transactions_api.searchParams.append('action', 'txlist')\n    transactions_api.searchParams.append('address', account)\n    transactions_api.searchParams.append('page', '1')\n    transactions_api.searchParams.append('offset', '10000')\n    transactions_api.searchParams.append('apikey', ethescanApiKey)\n\n    const transactionReq = await fetch(transactions_api.href)\n    const transactionRes = await transactionReq.json()\n    const transaction = transactionRes.result\n\n    let isMarketingWalletDonor = false\n    for (const item of transaction) {\n      if (item.to === pawthMarketingWallet.toLowerCase()) {\n        console.log('item', item)\n        isMarketingWalletDonor = true\n      }\n    }\n\n    return { isMarketingWalletDonor }\n  }\n\n  async function getGrumpyTransaction(account: string, balance: number) {\n    const transactions_api = new URL('https://api.etherscan.io/api')\n\n    transactions_api.searchParams.append('module', 'account')\n    transactions_api.searchParams.append('action', 'tokentx')\n    transactions_api.searchParams.append('contractaddress', grumpyContractAddress)\n    transactions_api.searchParams.append('address', account)\n    transactions_api.searchParams.append('page', '1')\n    transactions_api.searchParams.append('offset', '10000')\n    transactions_api.searchParams.append('apikey', ethescanApiKey)\n\n    const transactionReq = await fetch(transactions_api.href)\n    const transactionRes = await transactionReq.json()\n    const transaction = transactionRes.result\n\n    let totalIn = 0.0\n    let totalOut = 0.0\n\n    for (const item of transaction) {\n      if (item.to === account.toLowerCase()) {\n        totalIn += parseFloat(item.value)\n      } else {\n        totalOut += parseFloat(item.value)\n      }\n    }\n\n    // 2% of the out transaction goes to reflections, but we don't see that in etherscan\n    // so we add it here instead. If reflection numbers ever changes, this is fucked.\n    totalOut = totalOut + totalOut * 0.02\n\n    // if this person never sold, they are diamond hands\n    setIsDiamondHands(totalOut === 0 && totalIn > 0)\n\n    const balanceWithoutRedistribution = totalIn - totalOut\n    const redistribution = balance - balanceWithoutRedistribution\n\n    return { totalIn, totalOut, redistribution, balanceWithoutRedistribution }\n  }\n\n  async function getCharityWalletTransaction() {\n    const transactions_api = new URL('https://api.etherscan.io/api')\n    const charityWallet = '0xf4a22c530e8cc64770c4edb5766d26f8926e20bd'\n\n    transactions_api.searchParams.append('module', 'account')\n    transactions_api.searchParams.append('action', 'tokentx')\n    transactions_api.searchParams.append('contractaddress', grumpyContractAddress)\n    transactions_api.searchParams.append('address', charityWallet)\n    transactions_api.searchParams.append('page', '1')\n    transactions_api.searchParams.append('offset', '10000')\n    transactions_api.searchParams.append('apikey', ethescanApiKey)\n\n    const transactionReq = await fetch(transactions_api.href)\n    const transactionRes = await transactionReq.json()\n    const transaction = transactionRes.result\n\n    let totalIn = 0.0\n    let totalOut = 0.0\n    let oneDayTotal = 0.0\n\n    const now = new Date().getTime()\n    const oneDayAgo = 60 * 60 * 24 * 1000\n    const transactionHashesToday = transaction.filter((t: any) => {\n      return now - new Date(t.timeStamp * 1000).getTime() <= oneDayAgo\n    }).map((t: any) => t.hash)\n\n    for (const item of transaction) {\n      if (item.to === charityWallet.toLowerCase()) {\n        if (transactionHashesToday.includes(item.hash)) {\n          oneDayTotal += parseFloat(item.value)\n        }\n        totalIn += parseFloat(item.value)\n      } else {\n        totalOut += parseFloat(item.value)\n      }\n    }\n\n    return { oneDayTotal, totalIn, totalOut }\n\n  }\n\n  async function getPawthRanks(balance: number) {\n    balance /= 1000000000\n    const ranks = [\n      { name: 'You are the bottom rank', img: sadCat, threshold: 0 },\n      { name: 'Stray Cat', img: strayCat, threshold: 1000 },\n      { name: 'Kitten', img: kitten, threshold: 5000 },\n      { name: 'Dwarf Cat', img: dwarfCat, threshold: 10000 },\n      { name: 'Maine Coon', img: maineCoon, threshold: 25000 },\n      { name: 'Abbysinian', img: abbysinian, threshold: 50000 },\n      { name: 'Siamese', img: siamese, threshold: 100000 },\n      { name: 'Sand Cat', img: sandCat, threshold: 250000 },\n      { name: 'Serval', img: serval, threshold: 500000 },\n      { name: 'Puma', img: puma, threshold: 1000000 },\n      { name: 'Jaguar', img: jaguar, threshold: 2500000 },\n      { name: 'Black Panther', img: blackPanther, threshold: 5000000 },\n      { name: 'Tiger', img: tiger, threshold: 10000000 },\n      { name: 'Lion', img: lion, threshold: 10000000 },\n      { name: 'You achieved the top rank!', img: crown, threshold: 10000000 }\n    ]\n\n    let rankIndex = ranks.findIndex((r: any) => {\n      return balance <= r.threshold\n    })\n\n    let distanceToNextRank, distanceToPreviousRank\n\n    if (rankIndex === -1) {\n      rankIndex = ranks.length - 2\n      distanceToNextRank = 'The animals thank you'\n    }\n\n    if (rankIndex === 0) {\n      distanceToPreviousRank = 'You are the lowest rank'\n    }\n\n    const previousRank = ranks[rankIndex - 1]\n    const rank = ranks[rankIndex]\n    const nextRank = ranks[rankIndex + 1]\n\n    if (!distanceToNextRank) {\n      distanceToNextRank = '+' + formatPrice((rank.threshold - balance) * 1000000000)\n    }\n\n    if (!distanceToPreviousRank) {\n      const d = '-' + formatPrice((balance - previousRank.threshold + 1) * 1000000000)\n      distanceToPreviousRank = d === '-1' ? 'Go get some $PAWTH!' : d\n    }\n\n    return { previousRank, rank, nextRank, distanceToPreviousRank, distanceToNextRank }\n  }\n\n  useEffect(() => {\n    getWallet()\n  }, [account])\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\">\n        <InfoCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>Information</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>\n                  Pawthereum is a decentralized community-run charity cryptocurrency that aims to help animal shelters all over the world and has already donated over $80k!\n                </TYPE.white>\n              </RowBetween>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </InfoCard>\n      </TopSection>\n\n      {account ? (\n        <TopSection gap=\"md\">\n          <TopSection gap=\"2px\">\n            <WrapSmall>\n              <TYPE.mediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>\n                Your Wallet\n              </TYPE.mediumHeader>\n            </WrapSmall>\n            <MainContentWrapper>\n              <AutoColumn gap=\"lg\">\n                <AutoColumn gap=\"md\" justify=\"center\">\n                  <img src={logo} alt=\"Logo\" style={{ width: 100, height: 100 }} />\n                </AutoColumn>\n                <AutoColumn gap=\"sm\">\n                  <TYPE.body textAlign=\"center\">Your $PAWTH Balance</TYPE.body>\n                  <TYPE.largeHeader textAlign=\"center\">{formatPrice(grumpyBalance)}</TYPE.largeHeader>\n                </AutoColumn>\n                <AutoColumn gap=\"sm\">\n                  <TYPE.body textAlign=\"center\">Your $PAWTH USD Value</TYPE.body>\n                  <TYPE.largeHeader textAlign=\"center\">{grumpyUsdValue}</TYPE.largeHeader>\n                </AutoColumn>\n\n                <AutoColumn gap=\"sm\">\n                  <AutoRow justify=\"center\">\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">Price</TYPE.body>\n                      <TYPE.largeHeader textAlign=\"center\">{price}</TYPE.largeHeader>\n                    </PaddedAutoColumn>\n\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">Market Cap</TYPE.body>\n                      <TYPE.largeHeader textAlign=\"center\">{marketCap}</TYPE.largeHeader>\n                    </PaddedAutoColumn>\n                  </AutoRow>\n                </AutoColumn>\n              </AutoColumn>\n            </MainContentWrapper>\n          </TopSection>\n\n          <TopSection gap=\"2px\">\n            <WrapSmall>\n              <TYPE.mediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>\n                Your Rank and Awards\n              </TYPE.mediumHeader>\n            </WrapSmall>\n            <MainContentWrapper>\n            { grumpyBalance ? (\n              <AutoColumn gap=\"lg\">\n                <AutoRow justify=\"center\">\n                  <AutoColumn gap=\"sm\">\n                    <TYPE.mediumHeader textAlign=\"center\">\n                      Your PAWTHER Rank \n                      <StyledHelpButton onClick={() => openRankMenu()}>\n                        <HelpCircle size={14} />\n                      </StyledHelpButton>\n                    </TYPE.mediumHeader>\n                    <TYPE.body textAlign=\"center\">\n                      <img src={pawthRank.img} alt=\"Logo\" style={{ width: '100%', maxWidth: '200px', height: 'auto' }} />\n                    </TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{pawthRank.name}</TYPE.largeHeader>\n                  </AutoColumn>\n                </AutoRow>\n                <AutoRow justify=\"center\">\n                  <PaddedAutoColumn gap=\"sm\" style={{ width: '50%' }}>\n                    <TYPE.body textAlign=\"center\"><small>Next Rank</small></TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <img src={nextPawthRank.img} alt=\"Logo\" style={{ width: 50, height: 50 }} />\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <small><strong>{nextPawthRank.name}</strong></small>\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\"><small>{distanceToNextRank}</small></TYPE.body>\n                  </PaddedAutoColumn>\n                  {/* TODO: Uncomment this if we ever want to show the previous rank\n                  <PaddedAutoColumn gap=\"sm\" style={{ width: '50%' }}>\n                    <TYPE.body textAlign=\"center\"><small>Previous Rank</small></TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <img src={previousPawthRank.img} alt=\"Logo\" style={{ width: 50, height: 50 }} />\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <small><strong>{previousPawthRank.name}</strong></small>\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\"><small>{distanceToPreviousRank}</small></TYPE.body>\n                  </PaddedAutoColumn> */}\n                </AutoRow>\n                \n                <AutoRow justify=\"center\">\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.mediumHeader textAlign=\"center\">Your $PAWTH Awards</TYPE.mediumHeader>\n                  </PaddedAutoColumn>\n                </AutoRow>\n\n                <AutoRow justify=\"center\">\n                { isHolder ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={fist} alt=\"Pawth Holder\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Pawth Holder</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Holds 1+ Pawth</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : ''\n                }\n                { isOriginalSwapper ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={swap} alt=\"Original Swapper\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Original Swapper</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Swapped $GRUMPY</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : ''\n                }\n                {\n                  isDiamondHands ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">\n                      <img src={diamondPaws} alt=\"Diamond Paws\" style={{ width: 50, height: 50 }} />\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\"><strong>Diamond Paws</strong></TYPE.body>\n                    <TYPE.body textAlign=\"center\"><small>Never sold Pawth</small></TYPE.body>\n                  </PaddedAutoColumn>\n                  ) : ''\n                }\n                {\n                  isVoter ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={vote} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Snapshot Voter</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Voted on proposal</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                {\n                  isInWildCatClub ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={wildcat} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Wild Cats Club</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Holds 100k+ Pawth</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                {\n                  isBugSquisher ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={bug} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Bug Squisher</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Reported a Pawth bug</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                {\n                  isCatDayVisitor ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={catDay} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>National Cat Day</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Visited MyPawth on Cat Day</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                {\n                  isShibaLpProvider ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={shibaInuLp} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Shiba Liquidity Legend</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Provided Liquidity to Shiba Swap</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                {\n                  isUniswapLpProvider ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={uniLp} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Uni Liquidity Legend</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Provided Liquidity to Uniswap</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                {\n                  isMarketingDonor ? (\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.body textAlign=\"center\">\n                        <img src={heartSparkle} alt=\"Voter\" style={{ width: 50, height: 50 }} />\n                      </TYPE.body>\n                      <TYPE.body textAlign=\"center\"><strong>Marketing Donor</strong></TYPE.body>\n                      <TYPE.body textAlign=\"center\"><small>Donated to the Marketing Wallet</small></TYPE.body>\n                    </PaddedAutoColumn>\n                  ) : '' \n                }\n                </AutoRow>\n              </AutoColumn>\n              ) : (\n                <AutoColumn gap=\"lg\">\n                  <AutoRow justify=\"center\">\n                    <AutoColumn gap=\"sm\">\n                      <TYPE.mediumHeader textAlign=\"center\">Your PAWTHER Rank</TYPE.mediumHeader>\n                      <TYPE.largeHeader textAlign=\"center\">-</TYPE.largeHeader>\n                    </AutoColumn>\n                  </AutoRow>\n                  \n                  <AutoRow justify=\"center\">\n                    <PaddedAutoColumn gap=\"sm\">\n                      <TYPE.mediumHeader textAlign=\"center\">Your $PAWTH Awards</TYPE.mediumHeader>\n                    </PaddedAutoColumn>\n                  </AutoRow>\n                </AutoColumn>\n                \n              )\n            }\n            </MainContentWrapper>\n          </TopSection>\n\n          <TopSection gap=\"2px\">\n            <WrapSmall>\n              <TYPE.mediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>\n                Your $PAWTH Activity\n              </TYPE.mediumHeader>\n            </WrapSmall>\n            <MainContentWrapper>\n              <AutoColumn gap=\"lg\">\n                <AutoRow justify=\"center\">\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">Total $PAWTH In</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{formatPrice(totalIn)}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">Total $PAWTH Out</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{formatPrice(totalOut)}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                </AutoRow>\n\n                <AutoRow justify=\"center\">\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">$PAWTH Reflections Earned</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{formatPrice(redistributedAmount)}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">$PAWTH Reflections USD Value</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{redistributedUsdValue}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                </AutoRow>\n\n                <AutoColumn gap=\"sm\">\n                  <TYPE.body textAlign=\"center\">$PAWTH Balance without Reflections</TYPE.body>\n                  <TYPE.largeHeader textAlign=\"center\">\n                    {formatPrice(grumpyBalanceWithoutRedistribution)}\n                  </TYPE.largeHeader>\n                </AutoColumn>\n              </AutoColumn>\n            </MainContentWrapper>\n          </TopSection>\n\n          <TopSection gap=\"2px\">\n            <WrapSmall>\n              <TYPE.mediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>\n                Charity Wallet\n              </TYPE.mediumHeader>\n            </WrapSmall>\n            <MainContentWrapper>\n              <AutoColumn gap=\"lg\">\n                <AutoRow justify=\"center\">\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">$PAWTH Collected Last 24h</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{formatPrice(charityOneDayTotal)}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">USD Value Collected Last 24h</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{charityOneDayUsd}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                </AutoRow>\n              </AutoColumn>\n\n              {/* TODO: Uncomment this if we ever want to show charity all time stats\n              <AutoColumn gap=\"lg\">\n                <AutoRow justify=\"center\">\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">$PAWTH Collected All Time</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{formatPrice(charityAllTimeTotal)}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                  <PaddedAutoColumn gap=\"sm\">\n                    <TYPE.body textAlign=\"center\">USD Value Collected All Time</TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{charityWalletAllTimeUsd}</TYPE.largeHeader>\n                  </PaddedAutoColumn>\n                </AutoRow>\n              </AutoColumn> */}\n            </MainContentWrapper>\n          </TopSection>\n        </TopSection>\n      ) : (\n        <TopSection gap=\"2px\">\n          <WrapSmall>\n            <TYPE.mediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>Wallet</TYPE.mediumHeader>\n          </WrapSmall>\n          <MainContentWrapper>\n            <AutoColumn gap=\"lg\" justify=\"center\">\n              <img src={logo} alt=\"Logo\" style={{ width: 100, height: 100, padding: 20 }} />\n            </AutoColumn>\n            <AutoColumn gap=\"sm\">\n              <TYPE.body textAlign=\"center\">Connect your wallet to see your $PAWTH stats</TYPE.body>\n            </AutoColumn>\n          </MainContentWrapper>\n        </TopSection>\n      )}\n    </PageWrapper>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/hooks/useENS.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/transactions/hooks.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/claim/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/earn/styled.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/catDayVisitors/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/burn/v3/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/listSort.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/multicall/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/filtering.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useENSAddress.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useENSName.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Header/UniBalanceContent.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/CTACards.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Confetti/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/AddressInputPanel/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/currencyId.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/PoolPriceBar.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Row/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Modal/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Column/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Button/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidityV2/ConfirmAddModalBottom.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/connectors/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/v3/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/isZero.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useUSDCPrice.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/computeUniCirculation.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Card/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/FormattedCurrencyAmount/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/wallet/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useWindowSize.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useCurrentBlockTimestamp.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useTotalSupply.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/stake/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/mint/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/UnsupportedCurrencyFooter.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/connectors/NetworkConnector.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/connectors/Fortmatic.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/wrappedCurrency.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useV2Pairs.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/NavigationTabs/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useTheme.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/swap/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/abis/staking-rewards.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/CurrencyLogo/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/swap/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useParsedQueryString.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useV2Trade.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useHttpLocations.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useBestV3Trade.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Settings/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useAllCurrencyCombinations.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useENSContentHash.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/uriToHttp.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/parseENSAddress.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/contenthashToUri.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useAllV3Routes.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Logo/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/isTradeBetter.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useOnClickOutside.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useV3SwapPools.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/TransactionSettings/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Toggle/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/QuestionHelper/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/usePools.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/maxAmountSpend.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useTransactionDeadline.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/mint/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useIsSwapUnsupported.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useApproveCallback.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Pool/styleds.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AppBody.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/prices.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/getTradeVersion.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/governance/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useWrapCallback.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useSwapCallback.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useToggledVersion.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useERC20Permit.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/confirmPriceImpactWithoutFee.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CurrencySearchModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Popups/ClaimPopup.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Popups/PopupItem.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Vote/styled.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/computePriceImpactWithMaximumSlippage.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/computeFiatValuePriceImpact.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/vote/DelegateModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useTokenAllowance.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/TradePrice.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/burn/actions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapHeader.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/CompleteSwapModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/styleds.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/ConfirmSwapModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/state/burn/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/BetterTradeLink.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/styled.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/AddLiquidity/Review.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useDebouncedChangeHandler.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/PositionCard/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/TransactionConfirmationModal/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/DoubleLogo/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/CurrencyInputPanel/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Tooltip/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/earn/PoolCard.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/Earn/Countdown.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/claim/ClaimModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useIsArgentWallet.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useDerivedPositionInfo.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useV3Positions.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useLast.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Loader/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/TokenWarningModal/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Rank/index.tsx",["1066","1067","1068","1069","1070","1071","1072"],"import React, { useEffect, useState } from 'react'\nimport { HelpCircle } from 'react-feather'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { TYPE } from '../../theme'\nimport { RowBetween, AutoRow } from '../../components/Row'\nimport { DataCard } from '../../components/earn/styled'\nimport { useActiveWeb3React } from '../../hooks'\nimport logo from '../../assets/images/pawth-logo-transparent.png'\n// Ranks\nimport strayCat from '../../assets/images/strayCat.png'\nimport kitten from '../../assets/images/kitten.png'\nimport dwarfCat from '../../assets/images/dwarfCat.png'\nimport maineCoon from '../../assets/images/maineCoon.png'\nimport abbysinian from '../../assets/images/abbysinian.png'\nimport siamese from '../../assets/images/siamese.png'\nimport sandCat from '../../assets/images/sandCat.png'\nimport serval from '../../assets/images/serval.png'\nimport puma from '../../assets/images/puma.png'\nimport jaguar from '../../assets/images/jaguar.png'\nimport blackPanther from '../../assets/images/blackPanther.png'\nimport tiger from '../../assets/images/tiger.png'\nimport lion from '../../assets/images/lion.png'\nimport crown from '../../assets/images/crown.png'\nimport sadCat from '../../assets/images/sadCat.png'\n\nconst PageWrapper = styled(AutoColumn)``\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst InfoCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`\n\nconst WrapSmall = styled(RowBetween)`\n  margin-bottom: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n  `};\n`\n\nconst MainContentWrapper = styled.main`\n  background-color: ${({ theme }) => theme.bg0};\n  padding: 32px;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n`\nconst PaddedAutoColumn = styled(AutoColumn)`\n  padding: 12px;\n`\n\nexport const StyledHelpButton = styled.button`\n  position: relative;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg2};\n  margin-left: 8px;\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst ethescanApiKey = 'SZYGYXBA7K6ECH7DHB3QX2MR7GJZQK2M8P'\nconst grumpyContractAddress = '0xaecc217a749c2405b5ebc9857a16d58bdc1c367f'\n\ninterface Refresh {\n  refresh: boolean\n}\n\nexport default function Rank(props:Refresh) {\n  const { account } = useActiveWeb3React()\n\n  // wallet state vars\n  const [grumpyBalance, setGrumpyBalance] = useState(0)\n\n  // rank state vars\n  const [previousPawthRank, setPreviousPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [pawthRank, setPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [nextPawthRank, setNextPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [distanceToNextRank, setDistanceToNextRank] = useState('-')\n  const [distanceToPreviousRank, setDistanceToPreviousRank] = useState('-')\n\n  function openRankMenu () {\n    const rankMenuLink = 'https://cdn.discordapp.com/attachments/891351589162483732/895435039834251364/wcc2.png'\n    window.open(rankMenuLink);\n  }\n\n  function formatPrice(price: number) {\n    if (price > 0) {\n      const priceString = (price / 1000000000).toLocaleString('en-US', {\n        maximumFractionDigits: 0,\n      })\n\n      return priceString\n    }\n\n    return price.toString()\n  }\n\n  async function getWallet() {\n    if (account) {\n      const balance = await getGrumpyBalance(account)\n      const ranks = await getPawthRanks(balance)\n      \n      setGrumpyBalance(balance)\n\n      setPreviousPawthRank(ranks.previousRank)\n      setPawthRank(ranks.rank)\n      setNextPawthRank(ranks.nextRank)\n      setDistanceToNextRank(ranks.distanceToNextRank)\n      setDistanceToPreviousRank(ranks.distanceToPreviousRank)\n    }\n  }\n\n  async function getGrumpyBalance(account: string) {\n    const balance_api = new URL('https://api.etherscan.io/api')\n\n    balance_api.searchParams.append('module', 'account')\n    balance_api.searchParams.append('action', 'tokenbalance')\n    balance_api.searchParams.append('contractaddress', grumpyContractAddress)\n    balance_api.searchParams.append('address', account)\n    balance_api.searchParams.append('tag', 'latest')\n    balance_api.searchParams.append('apikey', ethescanApiKey)\n\n    const balanceReq = await fetch(balance_api.href)\n    const balanceRes = await balanceReq.json()\n    const balance = parseFloat(balanceRes.result)\n\n    return balance\n  }\n\n  async function getPawthRanks(balance: number) {\n    balance /= 1000000000\n    const ranks = [\n      { name: 'You are the bottom rank', img: sadCat, threshold: 0 },\n      { name: 'Stray Cat', img: strayCat, threshold: 1000 },\n      { name: 'Kitten', img: kitten, threshold: 5000 },\n      { name: 'Dwarf Cat', img: dwarfCat, threshold: 10000 },\n      { name: 'Maine Coon', img: maineCoon, threshold: 25000 },\n      { name: 'Abbysinian', img: abbysinian, threshold: 50000 },\n      { name: 'Siamese', img: siamese, threshold: 100000 },\n      { name: 'Sand Cat', img: sandCat, threshold: 250000 },\n      { name: 'Serval', img: serval, threshold: 500000 },\n      { name: 'Puma', img: puma, threshold: 1000000 },\n      { name: 'Jaguar', img: jaguar, threshold: 2500000 },\n      { name: 'Black Panther', img: blackPanther, threshold: 5000000 },\n      { name: 'Tiger', img: tiger, threshold: 10000000 },\n      { name: 'Lion', img: lion, threshold: 10000000 },\n      { name: 'You achieved the top rank!', img: crown, threshold: 10000000 }\n    ]\n\n    let rankIndex = ranks.findIndex((r: any) => {\n      return balance <= r.threshold\n    })\n\n    let distanceToNextRank, distanceToPreviousRank\n\n    if (rankIndex === -1) {\n      rankIndex = ranks.length - 2\n      distanceToNextRank = 'The animals thank you'\n    }\n\n    if (rankIndex === 0) {\n      distanceToPreviousRank = 'You are the lowest rank'\n    }\n\n    const previousRank = ranks[rankIndex - 1]\n    const rank = ranks[rankIndex]\n    const nextRank = ranks[rankIndex + 1]\n\n    if (!distanceToNextRank) {\n      distanceToNextRank = '+' + formatPrice((rank.threshold - balance) * 1000000000)\n    }\n\n    if (!distanceToPreviousRank) {\n      const d = '-' + formatPrice((balance - previousRank.threshold + 1) * 1000000000)\n      distanceToPreviousRank = d === '-1' ? 'Go get some $PAWTH!' : d\n    }\n\n    return { previousRank, rank, nextRank, distanceToPreviousRank, distanceToNextRank }\n  }\n\n  useEffect(() => {\n    getWallet()\n  }, [account, props.refresh])\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      {account ? (\n        <TopSection gap=\"md\">\n          <TopSection gap=\"2px\">\n            <MainContentWrapper>\n            { grumpyBalance ? (\n              <AutoColumn gap=\"lg\">\n                <AutoRow justify=\"center\">\n                  <AutoColumn gap=\"sm\">\n                    <TYPE.mediumHeader textAlign=\"center\">\n                      Your PAWTHER Rank \n                      {/* <StyledHelpButton onClick={() => openRankMenu()}>\n                        <HelpCircle size={14} />\n                      </StyledHelpButton> */}\n                    </TYPE.mediumHeader>\n                    <TYPE.body textAlign=\"center\">\n                      <img src={pawthRank.img} alt=\"Logo\" style={{ width: '100%', maxWidth: '200px', height: 'auto' }} />\n                    </TYPE.body>\n                    <TYPE.largeHeader textAlign=\"center\">{pawthRank.name}</TYPE.largeHeader>\n                  </AutoColumn>\n                </AutoRow>\n                <AutoRow justify=\"center\">\n                  <AutoColumn gap=\"md\" style={{ width: '50%' }}>\n                    { nextPawthRank.name == 'You achieved the top rank!' ? (\n                      <TYPE.body textAlign=\"center\">{distanceToNextRank}</TYPE.body>\n                    ) : \n                      <TYPE.body textAlign=\"center\">You are {distanceToNextRank} $PAWTH away from leveling up to: </TYPE.body>\n                    }\n                    <TYPE.body textAlign=\"center\">\n                      <img src={nextPawthRank.img} alt=\"Logo\" style={{ width: 50, height: 50 }} />\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <strong>{nextPawthRank.name}</strong>\n                    </TYPE.body>\n                    {/* <TYPE.body textAlign=\"center\">{distanceToNextRank} $PAWTH</TYPE.body> */}\n                  </AutoColumn>\n                  {/* TODO: Uncomment this if we ever want to show the previous rank\n                  <PaddedAutoColumn gap=\"sm\" style={{ width: '50%' }}>\n                    <TYPE.body textAlign=\"center\"><small>Previous Rank</small></TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <img src={previousPawthRank.img} alt=\"Logo\" style={{ width: 50, height: 50 }} />\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\">\n                      <small><strong>{previousPawthRank.name}</strong></small>\n                    </TYPE.body>\n                    <TYPE.body textAlign=\"center\"><small>{distanceToPreviousRank}</small></TYPE.body>\n                  </PaddedAutoColumn> */}\n                </AutoRow>\n              </AutoColumn>\n              ) : (\n                <AutoColumn gap=\"lg\">\n                  <AutoRow justify=\"center\">\n                    <AutoColumn gap=\"sm\">\n                      <TYPE.mediumHeader textAlign=\"center\">Your PAWTHER Rank</TYPE.mediumHeader>\n                      <TYPE.body textAlign=\"center\">Hold $PAWTH in your wallet to earn a PAWTHER Rank!</TYPE.body>\n                    </AutoColumn>\n                  </AutoRow>\n                </AutoColumn>\n              )\n            }\n            </MainContentWrapper>\n          </TopSection>\n        </TopSection>\n      ) : (\n        <TopSection gap=\"2px\">\n          <WrapSmall>\n            <TYPE.mediumHeader style={{ margin: '0.5rem 0.5rem 0.5rem 0', flexShrink: 0 }}>Wallet</TYPE.mediumHeader>\n          </WrapSmall>\n          <MainContentWrapper>\n            <AutoColumn gap=\"lg\" justify=\"center\">\n              <img src={logo} alt=\"Logo\" style={{ width: 100, height: 100, padding: 20 }} />\n            </AutoColumn>\n            <AutoColumn gap=\"sm\">\n              <TYPE.body textAlign=\"center\">Connect your wallet to see your PAWTHER Rank</TYPE.body>\n            </AutoColumn>\n          </MainContentWrapper>\n        </TopSection>\n      )}\n    </PageWrapper>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ImportList.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/AdvancedSwapDetails.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/Manage.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CurrencySearch.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ImportToken.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Popups/TransactionPopup.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Popups/ListUpdatePopup.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapModalHeader.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapModalFooter.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Slider/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useColor.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/CurrencyInputPanel/FiatValue.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/PositionCard/Sushi.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/PositionCard/V2.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/usePrevious.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Web3Status/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Menu/index.tsx",["1073","1074","1075","1076"],"import React, { useRef } from 'react'\nimport { BookOpen, Code, Info, MessageCircle, PieChart, Edit3 } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { ReactComponent as MenuIcon } from '../../assets/images/menu.svg'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks'\n\nimport { ExternalLink } from '../../theme'\nimport { ButtonPrimary } from '../Button'\n\nexport enum FlyoutAlignment {\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n}\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  path {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg2};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg3};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`\n\nconst UNIbutton = styled(ButtonPrimary)`\n  background-color: ${({ theme }) => theme.bg3};\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #ff007a 0%, #2172e5 100%), #edeef2;\n  border: none;\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span<{ flyoutAlignment?: FlyoutAlignment }>`\n  min-width: 8.125rem;\n  background-color: ${({ theme }) => theme.bg2};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 3rem;\n  z-index: 100;\n  ${({ flyoutAlignment = FlyoutAlignment.RIGHT }) =>\n    flyoutAlignment === FlyoutAlignment.RIGHT\n      ? css`\n          right: 0rem;\n        `\n      : css`\n          left: 0rem;\n        `};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    top: -17.25rem;\n  `};\n`\n\nconst MenuItem = styled(ExternalLink)`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5rem 0.5rem;\n  color: ${({ theme }) => theme.text2};\n  :hover {\n    color: ${({ theme }) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`\n\nconst InternalMenuItem = styled(Link)`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  padding: 0.5rem 0.5rem;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text2};\n  :hover {\n    color: ${({ theme }) => theme.text1};\n    cursor: pointer;\n    text-decoration: none;\n  }\n  > svg {\n    margin-right: 8px;\n  }\n`\n\nconst CODE_LINK = 'https://github.com/Financegrumpy/grumpy-swap'\n\nexport default function Menu() {\n  const { account } = useActiveWeb3React()\n\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.MENU)\n  const toggle = useToggleModal(ApplicationModal.MENU)\n  useOnClickOutside(node, open ? toggle : undefined)\n  const openClaimModal = useToggleModal(ApplicationModal.ADDRESS_CLAIM)\n\n  return (\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    <StyledMenu ref={node as any}>\n      <StyledMenuButton onClick={toggle}>\n        <StyledMenuIcon />\n      </StyledMenuButton>\n\n      {open && (\n        <MenuFlyout>\n          <MenuItem href=\"https://pawthereum.com/\">\n            <Info size={14} />\n            <div>About</div>\n          </MenuItem>\n          {/* <MenuItem href=\"https://docs.uniswap.org/\">\n            <BookOpen size={14} />\n            <div>Docs</div>\n          </MenuItem> */}\n          <MenuItem href={CODE_LINK}>\n            <Code size={14} />\n            <div>Code</div>\n          </MenuItem>\n          <MenuItem href=\"https://discord.gg/46HysF9z\">\n            <MessageCircle size={14} />\n            <div>Discord</div>\n          </MenuItem>\n          <MenuItem href=\"https://www.dextools.io/app/ether/pair-explorer/0x800a45f2b861229d59e952aef57b22e84ff949a1\">\n            <PieChart size={14} />\n            <div>Analytics</div>\n          </MenuItem>\n          <InternalMenuItem to={{\n            pathname: '/feedback'\n          }}>\n            <Edit3 size={14} />\n              <div>Feedback</div>\n          </InternalMenuItem>\n          {/* {account && (\n            <UNIbutton onClick={openClaimModal} padding=\"8px 16px\" width=\"100%\" borderRadius=\"12px\" mt=\"0.5rem\">\n              Claim UNI\n            </UNIbutton>\n          )} */}\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n\ninterface NewMenuProps {\n  flyoutAlignment?: FlyoutAlignment\n  ToggleUI?: React.FunctionComponent\n  menuItems: {\n    content: any\n    link: string\n    external: boolean\n  }[]\n}\n\nconst NewMenuFlyout = styled(MenuFlyout)`\n  top: 3rem !important;\n`\nconst NewMenuItem = styled(InternalMenuItem)`\n  width: max-content;\n  text-decoration: none;\n`\n\nconst ExternalMenuItem = styled(MenuItem)`\n  width: max-content;\n  text-decoration: none;\n`\n\nexport const NewMenu = ({ flyoutAlignment = FlyoutAlignment.RIGHT, ToggleUI, menuItems, ...rest }: NewMenuProps) => {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.POOL_OVERVIEW_OPTIONS)\n  const toggle = useToggleModal(ApplicationModal.POOL_OVERVIEW_OPTIONS)\n  useOnClickOutside(node, open ? toggle : undefined)\n  const ToggleElement = ToggleUI || StyledMenuIcon\n  return (\n    <StyledMenu ref={node as any} {...rest}>\n      <ToggleElement onClick={toggle} />\n      {open && (\n        <NewMenuFlyout flyoutAlignment={flyoutAlignment}>\n          {menuItems.map(({ content, link, external }, i) =>\n            external ? (\n              <ExternalMenuItem id=\"link\" href={link} key={link + i}>\n                {content}\n              </ExternalMenuItem>\n            ) : (\n              <NewMenuItem id=\"link\" to={link} key={link + i}>\n                {content}\n              </NewMenuItem>\n            )\n          )}\n        </NewMenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/utils.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/pages/RemoveLiquidity/styled.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/earn/ClaimRewardModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/earn/StakingModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/earn/UnstakingModal.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/RangeSelector/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/PositionPreview/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/FeeSelector/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/RateToggle/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/listVersionLabel.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/sorting.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/ModalViews/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/SwapRoute.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ManageTokens.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ManageLists.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/styleds.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/TransactionCompleteModal/index.tsx",["1077","1078"],"import { ChainId, Currency } from '@uniswap/sdk-core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport Modal from '../Modal'\nimport { ExternalLink } from '../../theme'\nimport { Text } from 'rebass'\nimport { CloseIcon, CustomLightSpinner } from '../../theme/components'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AlertTriangle, ArrowUpCircle, CheckCircle, Twitter } from 'react-feather'\nimport { ButtonPrimary, ButtonLight } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport Circle from '../../assets/images/blue-loader.svg'\nimport MetaMaskLogo from '../../assets/images/metamask.png'\nimport { getEtherscanLink } from '../../utils'\nimport { useActiveWeb3React } from '../../hooks'\nimport useAddTokenToMetamask from 'hooks/useAddTokenToMetamask'\nimport Confetti from '../Confetti'\n\n// Ranks\nimport strayCat from '../../assets/images/strayCat.png'\nimport kitten from '../../assets/images/kitten.png'\nimport dwarfCat from '../../assets/images/dwarfCat.png'\nimport maineCoon from '../../assets/images/maineCoon.png'\nimport abbysinian from '../../assets/images/abbysinian.png'\nimport siamese from '../../assets/images/siamese.png'\nimport sandCat from '../../assets/images/sandCat.png'\nimport serval from '../../assets/images/serval.png'\nimport puma from '../../assets/images/puma.png'\nimport jaguar from '../../assets/images/jaguar.png'\nimport blackPanther from '../../assets/images/blackPanther.png'\nimport tiger from '../../assets/images/tiger.png'\nimport lion from '../../assets/images/lion.png'\nimport crown from '../../assets/images/crown.png'\nimport sadCat from '../../assets/images/sadCat.png'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  padding: 1rem;\n`\nconst Section = styled(AutoColumn)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '0' : '0')};\n`\n\nconst BottomSection = styled(Section)`\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '20px 0' : '60px 0;')};\n`\n\nconst StyledLogo = styled.img`\n  height: 16px;\n  width: 16px;\n  margin-left: 6px;\n`\nconst StyledHorizontalRule = styled.div`\n  display: inline;\n  width: 100%;\n`\n\nfunction formatPrice(price: number) {\n  if (price > 0) {\n    const priceString = (price / 1000000000).toLocaleString('en-US', {\n      maximumFractionDigits: 0,\n    })\n\n    return priceString\n  }\n\n  return price.toString()\n}\n\nconst pawthContractAddress = '0xaecc217a749c2405b5ebc9857a16d58bdc1c367f'\nconst ethescanApiKey = 'SZYGYXBA7K6ECH7DHB3QX2MR7GJZQK2M8P'\n\nasync function getPawthRanks(balance: number) {\n  //TODO: GET RID OF THIS FAKE BALANCE STUFF WHEN GOING LIVE\n  // balance = (balance + 1000000000000001) / 1000000000\n  balance /= 1000000000\n\n  const ranks = [\n    { name: 'You are the bottom rank', img: sadCat, threshold: 0 },\n    { name: 'Stray Cat', img: strayCat, threshold: 1000 },\n    { name: 'Kitten', img: kitten, threshold: 5000 },\n    { name: 'Dwarf Cat', img: dwarfCat, threshold: 10000 },\n    { name: 'Maine Coon', img: maineCoon, threshold: 25000 },\n    { name: 'Abbysinian', img: abbysinian, threshold: 50000 },\n    { name: 'Siamese', img: siamese, threshold: 100000 },\n    { name: 'Sand Cat', img: sandCat, threshold: 250000 },\n    { name: 'Serval', img: serval, threshold: 500000 },\n    { name: 'Puma', img: puma, threshold: 1000000 },\n    { name: 'Jaguar', img: jaguar, threshold: 2500000 },\n    { name: 'Black Panther', img: blackPanther, threshold: 5000000 },\n    { name: 'Tiger', img: tiger, threshold: 10000000 },\n    { name: 'Lion', img: lion, threshold: 10000000 },\n    { name: 'You achieved the top rank!', img: crown, threshold: 10000000 }\n  ]\n\n  let rankIndex = ranks.findIndex((r: any) => {\n    return balance <= r.threshold\n  })\n\n  let distanceToNextRank, distanceToPreviousRank\n\n  if (rankIndex === -1) {\n    rankIndex = ranks.length - 2\n    distanceToNextRank = 'The animals thank you'\n  }\n\n  if (rankIndex === 0) {\n    distanceToPreviousRank = 'You are the lowest rank'\n  }\n\n  const previousRank = ranks[rankIndex - 1]\n  const rank = ranks[rankIndex]\n  const nextRank = ranks[rankIndex + 1]\n\n  if (!distanceToNextRank) {\n    distanceToNextRank = '+' + formatPrice((rank.threshold - balance) * 1000000000)\n  }\n\n  if (!distanceToPreviousRank) {\n    const d = '-' + formatPrice((balance - previousRank.threshold + 1) * 1000000000)\n    distanceToPreviousRank = d === '-1' ? 'Go get some $PAWTH!' : d\n  }\n\n  return { previousRank, rank, nextRank, distanceToPreviousRank, distanceToNextRank }\n}\n\nasync function getTokenBalance(account: string, tokenAddr: string, tokenDecimals: number) {\n  const balance_api = new URL('https://api.etherscan.io/api')\n\n  balance_api.searchParams.append('module', 'account')\n  balance_api.searchParams.append('action', 'tokenbalance')\n  balance_api.searchParams.append('contractaddress', tokenAddr)\n  balance_api.searchParams.append('address', account)\n  balance_api.searchParams.append('tag', 'latest')\n  balance_api.searchParams.append('apikey', ethescanApiKey)\n\n  const balanceReq = await fetch(balance_api.href)\n  const balanceRes = await balanceReq.json()\n  const balance = parseFloat(balanceRes.result)\n\n  const formattedBalance = balance / 10**tokenDecimals\n  return { balance, formattedBalance }\n}\n\nexport function ConfirmationPendingContent({\n  onDismiss,\n  pendingText,\n  inline,\n}: {\n  onDismiss: () => void\n  pendingText: string\n  inline?: boolean // not in modal\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        {!inline && (\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <ConfirmedIcon inline={inline}>\n          <CustomLightSpinner src={Circle} alt=\"loader\" size={inline ? '40px' : '90px'} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify={'center'}>\n          <Text fontWeight={500} fontSize={20} textAlign=\"center\">\n            Waiting For Confirmation - Hello there!\n          </Text>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <Text fontWeight={600} fontSize={14} color=\"\" textAlign=\"center\">\n              {pendingText}\n            </Text>\n          </AutoColumn>\n          <Text fontSize={12} color=\"#565A69\" textAlign=\"center\" marginBottom={12}>\n            Confirm this transaction in your wallet\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport function TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n  inline,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n  inline?: boolean // not in modal\n}) {\n  const theme = useContext(ThemeContext)\n\n  const { library } = useActiveWeb3React()\n\n  const { addToken, success } = useAddTokenToMetamask(currencyToAdd)\n\n  const { account } = useActiveWeb3React()\n\n  useEffect(() => {\n    getWallet()\n  }, [account])\n  \n  const [pawthRank, setPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  const [distanceToNextRank, setDistanceToNextRank] = useState('-')\n  const [nextPawthRank, setNextPawthRank] = useState({ name: '', img: '', threshold: 0 })\n  \n  // url encode the text for a tweet\n  const tweetTemplate = \"I%20just%20contributed%20to%20helping%20animal%20shelters%20around%20the%20world%20by%20purchasing%20Pawthereum!%20%23followthepawth%20%F0%9F%90%BE%20%40Pawthereum\"\n\n  async function getWallet() {\n    console.log('getting acct')\n    if (account) {\n      console.log('got account', account)\n      const pawthBalance = await getTokenBalance(account, pawthContractAddress, 9)\n      const ranks = await getPawthRanks(pawthBalance.balance)\n      console.log('ranks', ranks)\n      setPawthRank(ranks.rank)\n      setNextPawthRank(ranks.nextRank)\n      setDistanceToNextRank(ranks.distanceToNextRank)\n    }\n  }\n  return (\n    <Wrapper>\n      <Section inline={inline}>\n        {!inline && (\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <AutoColumn gap=\"12px\" justify={'center'}>\n          <Confetti start={Boolean(true)} />\n          <Text fontWeight={500} fontSize={20} textAlign=\"center\">\n            You just saved animals!\n          </Text>\n          <Text fontWeight={500} fontSize={16} textAlign=\"center\">\n            2% of your transaction will be used to help animal charities across the globe!\n          </Text>\n          <ExternalLink href={'https://twitter.com/intent/tweet?text=' + tweetTemplate}>\n            <Text fontWeight={500} fontSize={14} color={theme.primary1} style={{ display: 'flex', alignContent: 'center' }}>\n              <Twitter size={14} style={{ marginRight: '5px' }}/> Tweet about it and tell the world!\n            </Text>\n          </ExternalLink>\n          {/* <ExternalLink href={'https://twitter.com/intent/tweet?text=' + tweetTemplate} style={{ textDecoration: 'none' }}>\n            <Text fontWeight={500} fontSize={14} color={theme.primary1} style={{ display: 'flex', alignContent: 'center' }}>\n              <Twitter size={14} style={{ marginRight: '5px' }}/> Tweet about it and tell the world!\n            </Text>\n          </ExternalLink> */}\n          <StyledHorizontalRule>\n            <hr/>\n          </StyledHorizontalRule>\n          { pawthRank ? (\n            <AutoColumn gap=\"12px\" justify={'center'}>\n              <Text fontWeight={500} fontSize={18} textAlign=\"center\">\n                Your PAWTHER Rank is now: { pawthRank ? pawthRank.name : '...'}\n              </Text>\n              <img src={pawthRank.img} alt=\"Logo\" style={{ width: '100%', maxWidth: '150px', height: 'auto' }} />\n              <Text fontWeight={500} fontSize={16} textAlign=\"center\">\n                You are {distanceToNextRank} PAWTH away from becoming a {nextPawthRank.name}!\n              </Text>\n            </AutoColumn>\n          ) : '' }\n          {chainId && hash && (\n            <AutoColumn gap=\"12px\" justify={'center'}>\n              <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>\n                <Text fontWeight={500} fontSize={14} textAlign=\"center\">\n                  View your transaction on Etherscan\n                </Text>\n              </ExternalLink>\n            </AutoColumn>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <ButtonLight mt=\"12px\" padding=\"6px 12px\" width=\"fit-content\" onClick={addToken}>\n              {!success ? (\n                <RowFixed>\n                  Add {currencyToAdd.symbol} to Metamask <StyledLogo src={MetaMaskLogo} />\n                </RowFixed>\n              ) : (\n                <RowFixed>\n                  Added {currencyToAdd.symbol}{' '}\n                  <CheckCircle size={'16px'} stroke={theme.green1} style={{ marginLeft: '6px' }} />\n                </RowFixed>\n              )}\n            </ButtonLight>\n          )}\n          <ButtonPrimary onClick={onDismiss} style={{ margin: '20px 0 0 0' }}>\n            <Text fontWeight={500} fontSize={20}>\n              {inline ? 'Return' : 'Close'}\n            </Text>\n          </ButtonPrimary>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  title,\n  bottomContent,\n  onDismiss,\n  topContent,\n}: {\n  title: string\n  onDismiss: () => void\n  topContent: () => React.ReactNode\n  bottomContent?: () => React.ReactNode | undefined\n}) {\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={16}>\n            {title}\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        {topContent()}\n      </Section>\n      {bottomContent && <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>}\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const theme = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            Error\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n          <AlertTriangle color={theme.red1} style={{ strokeWidth: 1.5 }} size={64} />\n          <Text fontWeight={500} fontSize={16} color={theme.red1} style={{ textAlign: 'center', width: '85%' }}>\n            {message}\n          </Text>\n        </AutoColumn>\n      </Section>\n      <BottomSection gap=\"12px\">\n        <ButtonPrimary onClick={onDismiss}>Dismiss</ButtonPrimary>\n      </BottomSection>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}: ConfirmationModalProps) {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/ImportRow.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useAddTokenToMetamask.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CurrencyList.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/PositionList/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/SearchModal/CommonBases.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/swap/FormattedPriceImpact.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/NumericalInput/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Popover/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useSocksBalance.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Badge/RangeBadge.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/getTickToPrice.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/usePositionTokenURI.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useToggle.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Toggle/ListToggle.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/getTokenList.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/burn/v3/hooks.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/mint/v3/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/burn/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/lists/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/mint/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/swap/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/transactions/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/state/user/reducer.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useV3PositionFees.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/WalletModal/index.tsx",["1079","1080","1081","1082"],"import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { AutoRow } from 'components/Row'\nimport React, { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components'\nimport MetamaskIcon from '../../assets/images/metamask.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { fortmatic, injected, portis } from '../../connectors'\nimport { OVERLAY_READY } from '../../connectors/Fortmatic'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport usePrevious from '../../hooks/usePrevious'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { ExternalLink, TYPE } from '../../theme'\nimport AccountDetails from '../AccountDetails'\n\nimport Modal from '../Modal'\nimport Option from './Option'\nimport PendingView from './PendingView'\nimport { LightCard } from '../Card'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg0};\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0 1rem 1rem 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => theme.text1};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name,\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined\n    }\n\n    connector &&\n      activate(connector, undefined, true).catch((error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector) // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true)\n        }\n      })\n  }\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal()\n    })\n  }, [toggleWalletModal])\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={option.iconURL}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={option.iconURL}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'}</HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>Please connect to the appropriate Ethereum network.</h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n\n        <ContentWrapper>\n          {/* <LightCard style={{ marginBottom: '16px' }}>\n            <AutoRow style={{ flexWrap: 'nowrap' }}>\n              <TYPE.main fontSize={14}>\n                By connecting a wallet, you agree to Uniswap Labs’{' '}\n                <ExternalLink href=\"https://uniswap.org/terms-of-service/\">Terms of Service</ExternalLink> and\n                acknowledge that you have read and understand the{' '}\n                <ExternalLink href=\"https://uniswap.org/disclaimer/\">Uniswap protocol disclaimer</ExternalLink>.\n              </TYPE.main>\n            </AutoRow>\n          </LightCard> */}\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n","/Users/msolomon/Projects/MyPawthereum/src/components/Identicon/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/utils/formatTokenAmount.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/PositionListItem/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/ProgressSteps/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/ListLogo/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Toggle/MultiToggle.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/InputStepCounter/InputStepCounter.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/Badge/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/testers/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/bugSquishers/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/proposals/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/originalSwappers/index.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/WalletModal/Option.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/WalletModal/PendingView.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/constants/proposals/uniswap_grants.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/AccountDetails/index.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/AccountDetails/Transaction.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/components/AccountDetails/Copy.tsx",[],"/Users/msolomon/Projects/MyPawthereum/src/hooks/useCopyClipboard.ts",[],"/Users/msolomon/Projects/MyPawthereum/src/components/vote/VoteModal.tsx",[],{"ruleId":"1083","severity":1,"message":"1084","line":235,"column":7,"nodeType":"1085","messageId":"1086","endLine":235,"endColumn":25},{"ruleId":"1087","severity":1,"message":"1088","line":360,"column":6,"nodeType":"1089","endLine":360,"endColumn":8,"suggestions":"1090"},{"ruleId":"1083","severity":1,"message":"1091","line":1,"column":17,"nodeType":"1085","messageId":"1086","endLine":1,"endColumn":26},{"ruleId":"1083","severity":1,"message":"1092","line":1,"column":28,"nodeType":"1085","messageId":"1086","endLine":1,"endColumn":36},{"ruleId":"1083","severity":1,"message":"1093","line":100,"column":7,"nodeType":"1085","messageId":"1086","endLine":100,"endColumn":25},{"ruleId":"1083","severity":1,"message":"1094","line":123,"column":10,"nodeType":"1085","messageId":"1086","endLine":123,"endColumn":33},{"ruleId":"1083","severity":1,"message":"1095","line":125,"column":10,"nodeType":"1085","messageId":"1086","endLine":125,"endColumn":34},{"ruleId":"1083","severity":1,"message":"1096","line":128,"column":10,"nodeType":"1085","messageId":"1086","endLine":128,"endColumn":27},{"ruleId":"1083","severity":1,"message":"1097","line":132,"column":10,"nodeType":"1085","messageId":"1086","endLine":132,"endColumn":32},{"ruleId":"1083","severity":1,"message":"1098","line":135,"column":10,"nodeType":"1085","messageId":"1086","endLine":135,"endColumn":18},{"ruleId":"1087","severity":1,"message":"1099","line":541,"column":6,"nodeType":"1089","endLine":541,"endColumn":15,"suggestions":"1100"},{"ruleId":"1083","severity":1,"message":"1101","line":2,"column":10,"nodeType":"1085","messageId":"1086","endLine":2,"endColumn":20},{"ruleId":"1083","severity":1,"message":"1102","line":34,"column":7,"nodeType":"1085","messageId":"1086","endLine":34,"endColumn":15},{"ruleId":"1083","severity":1,"message":"1103","line":53,"column":7,"nodeType":"1085","messageId":"1086","endLine":53,"endColumn":23},{"ruleId":"1083","severity":1,"message":"1096","line":99,"column":10,"nodeType":"1085","messageId":"1086","endLine":99,"endColumn":27},{"ruleId":"1083","severity":1,"message":"1097","line":103,"column":10,"nodeType":"1085","messageId":"1086","endLine":103,"endColumn":32},{"ruleId":"1083","severity":1,"message":"1104","line":105,"column":12,"nodeType":"1085","messageId":"1086","endLine":105,"endColumn":24},{"ruleId":"1087","severity":1,"message":"1099","line":207,"column":6,"nodeType":"1089","endLine":207,"endColumn":30,"suggestions":"1105"},{"ruleId":"1083","severity":1,"message":"1106","line":2,"column":10,"nodeType":"1085","messageId":"1086","endLine":2,"endColumn":18},{"ruleId":"1083","severity":1,"message":"1107","line":50,"column":7,"nodeType":"1085","messageId":"1086","endLine":50,"endColumn":16},{"ruleId":"1083","severity":1,"message":"1108","line":130,"column":11,"nodeType":"1085","messageId":"1086","endLine":130,"endColumn":18},{"ruleId":"1083","severity":1,"message":"1109","line":136,"column":9,"nodeType":"1085","messageId":"1086","endLine":136,"endColumn":23},{"ruleId":"1083","severity":1,"message":"1110","line":9,"column":25,"nodeType":"1085","messageId":"1086","endLine":9,"endColumn":38},{"ruleId":"1087","severity":1,"message":"1099","line":212,"column":6,"nodeType":"1089","endLine":212,"endColumn":15,"suggestions":"1111"},{"ruleId":"1083","severity":1,"message":"1112","line":4,"column":10,"nodeType":"1085","messageId":"1086","endLine":4,"endColumn":17},{"ruleId":"1083","severity":1,"message":"1113","line":17,"column":10,"nodeType":"1085","messageId":"1086","endLine":17,"endColumn":22},{"ruleId":"1083","severity":1,"message":"1114","line":17,"column":24,"nodeType":"1085","messageId":"1086","endLine":17,"endColumn":28},{"ruleId":"1083","severity":1,"message":"1115","line":23,"column":10,"nodeType":"1085","messageId":"1086","endLine":23,"endColumn":19},"@typescript-eslint/no-unused-vars","'StyledExternalLink' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'handleConfirmDismiss'. Either include it or remove the dependency array.","ArrayExpression",["1116"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'pawthCharityWallet' is assigned a value but never used.","'charityWalletAllTimeUsd' is assigned a value but never used.","'charityTransferredOutUsd' is assigned a value but never used.","'previousPawthRank' is assigned a value but never used.","'distanceToPreviousRank' is assigned a value but never used.","'isTester' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getWallet'. Either include it or remove the dependency array.",["1117"],"'HelpCircle' is defined but never used.","'InfoCard' is assigned a value but never used.","'PaddedAutoColumn' is assigned a value but never used.","'openRankMenu' is defined but never used.",["1118"],"'BookOpen' is defined but never used.","'UNIbutton' is assigned a value but never used.","'account' is assigned a value but never used.","'openClaimModal' is assigned a value but never used.","'ArrowUpCircle' is defined but never used.",["1119"],"'AutoRow' is defined but never used.","'ExternalLink' is defined but never used.","'TYPE' is defined but never used.","'LightCard' is defined but never used.",{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1122","fix":"1126"},"Update the dependencies array to be: [handleConfirmDismiss]",{"range":"1127","text":"1128"},"Update the dependencies array to be: [account, getWallet]",{"range":"1129","text":"1130"},"Update the dependencies array to be: [account, getWallet, props.refresh]",{"range":"1131","text":"1132"},{"range":"1133","text":"1130"},[13469,13471],"[handleConfirmDismiss]",[19236,19245],"[account, getWallet]",[6692,6716],"[account, getWallet, props.refresh]",[7005,7014]]